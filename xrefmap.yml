### YamlMime:XRefMap
sorted: true
references:
- uid: FluentModbus
  name: FluentModbus
  href: api/FluentModbus.html
  commentId: N:FluentModbus
  fullName: FluentModbus
  nameWithType: FluentModbus
- uid: FluentModbus.CoilsChangedEventArgs
  name: CoilsChangedEventArgs
  href: api/FluentModbus.CoilsChangedEventArgs.html
  commentId: T:FluentModbus.CoilsChangedEventArgs
  fullName: FluentModbus.CoilsChangedEventArgs
  nameWithType: CoilsChangedEventArgs
- uid: FluentModbus.CoilsChangedEventArgs.Coils
  name: Coils
  href: api/FluentModbus.CoilsChangedEventArgs.html#FluentModbus_CoilsChangedEventArgs_Coils
  commentId: P:FluentModbus.CoilsChangedEventArgs.Coils
  fullName: FluentModbus.CoilsChangedEventArgs.Coils
  nameWithType: CoilsChangedEventArgs.Coils
- uid: FluentModbus.CoilsChangedEventArgs.Coils*
  name: Coils
  href: api/FluentModbus.CoilsChangedEventArgs.html#FluentModbus_CoilsChangedEventArgs_Coils_
  commentId: Overload:FluentModbus.CoilsChangedEventArgs.Coils
  isSpec: "True"
  fullName: FluentModbus.CoilsChangedEventArgs.Coils
  nameWithType: CoilsChangedEventArgs.Coils
- uid: FluentModbus.CoilsChangedEventArgs.UnitIdentifier
  name: UnitIdentifier
  href: api/FluentModbus.CoilsChangedEventArgs.html#FluentModbus_CoilsChangedEventArgs_UnitIdentifier
  commentId: P:FluentModbus.CoilsChangedEventArgs.UnitIdentifier
  fullName: FluentModbus.CoilsChangedEventArgs.UnitIdentifier
  nameWithType: CoilsChangedEventArgs.UnitIdentifier
- uid: FluentModbus.CoilsChangedEventArgs.UnitIdentifier*
  name: UnitIdentifier
  href: api/FluentModbus.CoilsChangedEventArgs.html#FluentModbus_CoilsChangedEventArgs_UnitIdentifier_
  commentId: Overload:FluentModbus.CoilsChangedEventArgs.UnitIdentifier
  isSpec: "True"
  fullName: FluentModbus.CoilsChangedEventArgs.UnitIdentifier
  nameWithType: CoilsChangedEventArgs.UnitIdentifier
- uid: FluentModbus.ExtendedBinaryReader
  name: ExtendedBinaryReader
  href: api/FluentModbus.ExtendedBinaryReader.html
  commentId: T:FluentModbus.ExtendedBinaryReader
  fullName: FluentModbus.ExtendedBinaryReader
  nameWithType: ExtendedBinaryReader
- uid: FluentModbus.ExtendedBinaryReader.#ctor(System.IO.Stream)
  name: ExtendedBinaryReader(Stream)
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader__ctor_System_IO_Stream_
  commentId: M:FluentModbus.ExtendedBinaryReader.#ctor(System.IO.Stream)
  name.vb: New(Stream)
  fullName: FluentModbus.ExtendedBinaryReader.ExtendedBinaryReader(System.IO.Stream)
  fullName.vb: FluentModbus.ExtendedBinaryReader.New(System.IO.Stream)
  nameWithType: ExtendedBinaryReader.ExtendedBinaryReader(Stream)
  nameWithType.vb: ExtendedBinaryReader.New(Stream)
- uid: FluentModbus.ExtendedBinaryReader.#ctor*
  name: ExtendedBinaryReader
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader__ctor_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ExtendedBinaryReader.ExtendedBinaryReader
  fullName.vb: FluentModbus.ExtendedBinaryReader.New
  nameWithType: ExtendedBinaryReader.ExtendedBinaryReader
  nameWithType.vb: ExtendedBinaryReader.New
- uid: FluentModbus.ExtendedBinaryReader.ReadFloat32Reverse
  name: ReadFloat32Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadFloat32Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadFloat32Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadFloat32Reverse()
  nameWithType: ExtendedBinaryReader.ReadFloat32Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadFloat32Reverse*
  name: ReadFloat32Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadFloat32Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadFloat32Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadFloat32Reverse
  nameWithType: ExtendedBinaryReader.ReadFloat32Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadFloat64Reverse
  name: ReadFloat64Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadFloat64Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadFloat64Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadFloat64Reverse()
  nameWithType: ExtendedBinaryReader.ReadFloat64Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadFloat64Reverse*
  name: ReadFloat64Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadFloat64Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadFloat64Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadFloat64Reverse
  nameWithType: ExtendedBinaryReader.ReadFloat64Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadInt16Reverse
  name: ReadInt16Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadInt16Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadInt16Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadInt16Reverse()
  nameWithType: ExtendedBinaryReader.ReadInt16Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadInt16Reverse*
  name: ReadInt16Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadInt16Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadInt16Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadInt16Reverse
  nameWithType: ExtendedBinaryReader.ReadInt16Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadInt32Reverse
  name: ReadInt32Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadInt32Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadInt32Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadInt32Reverse()
  nameWithType: ExtendedBinaryReader.ReadInt32Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadInt32Reverse*
  name: ReadInt32Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadInt32Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadInt32Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadInt32Reverse
  nameWithType: ExtendedBinaryReader.ReadInt32Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadInt64Reverse
  name: ReadInt64Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadInt64Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadInt64Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadInt64Reverse()
  nameWithType: ExtendedBinaryReader.ReadInt64Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadInt64Reverse*
  name: ReadInt64Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadInt64Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadInt64Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadInt64Reverse
  nameWithType: ExtendedBinaryReader.ReadInt64Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadUInt16Reverse
  name: ReadUInt16Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadUInt16Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadUInt16Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadUInt16Reverse()
  nameWithType: ExtendedBinaryReader.ReadUInt16Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadUInt16Reverse*
  name: ReadUInt16Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadUInt16Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadUInt16Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadUInt16Reverse
  nameWithType: ExtendedBinaryReader.ReadUInt16Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadUInt32Reverse
  name: ReadUInt32Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadUInt32Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadUInt32Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadUInt32Reverse()
  nameWithType: ExtendedBinaryReader.ReadUInt32Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadUInt32Reverse*
  name: ReadUInt32Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadUInt32Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadUInt32Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadUInt32Reverse
  nameWithType: ExtendedBinaryReader.ReadUInt32Reverse
- uid: FluentModbus.ExtendedBinaryReader.ReadUInt64Reverse
  name: ReadUInt64Reverse()
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadUInt64Reverse
  commentId: M:FluentModbus.ExtendedBinaryReader.ReadUInt64Reverse
  fullName: FluentModbus.ExtendedBinaryReader.ReadUInt64Reverse()
  nameWithType: ExtendedBinaryReader.ReadUInt64Reverse()
- uid: FluentModbus.ExtendedBinaryReader.ReadUInt64Reverse*
  name: ReadUInt64Reverse
  href: api/FluentModbus.ExtendedBinaryReader.html#FluentModbus_ExtendedBinaryReader_ReadUInt64Reverse_
  commentId: Overload:FluentModbus.ExtendedBinaryReader.ReadUInt64Reverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryReader.ReadUInt64Reverse
  nameWithType: ExtendedBinaryReader.ReadUInt64Reverse
- uid: FluentModbus.ExtendedBinaryWriter
  name: ExtendedBinaryWriter
  href: api/FluentModbus.ExtendedBinaryWriter.html
  commentId: T:FluentModbus.ExtendedBinaryWriter
  fullName: FluentModbus.ExtendedBinaryWriter
  nameWithType: ExtendedBinaryWriter
- uid: FluentModbus.ExtendedBinaryWriter.#ctor(System.IO.Stream)
  name: ExtendedBinaryWriter(Stream)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter__ctor_System_IO_Stream_
  commentId: M:FluentModbus.ExtendedBinaryWriter.#ctor(System.IO.Stream)
  name.vb: New(Stream)
  fullName: FluentModbus.ExtendedBinaryWriter.ExtendedBinaryWriter(System.IO.Stream)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.New(System.IO.Stream)
  nameWithType: ExtendedBinaryWriter.ExtendedBinaryWriter(Stream)
  nameWithType.vb: ExtendedBinaryWriter.New(Stream)
- uid: FluentModbus.ExtendedBinaryWriter.#ctor*
  name: ExtendedBinaryWriter
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter__ctor_
  commentId: Overload:FluentModbus.ExtendedBinaryWriter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ExtendedBinaryWriter.ExtendedBinaryWriter
  fullName.vb: FluentModbus.ExtendedBinaryWriter.New
  nameWithType: ExtendedBinaryWriter.ExtendedBinaryWriter
  nameWithType.vb: ExtendedBinaryWriter.New
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Double)
  name: WriteReverse(double)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_Double_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Double)
  name.vb: WriteReverse(Double)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(double)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(Double)
  nameWithType: ExtendedBinaryWriter.WriteReverse(double)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(Double)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Int16)
  name: WriteReverse(short)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_Int16_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Int16)
  name.vb: WriteReverse(Short)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(short)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(Short)
  nameWithType: ExtendedBinaryWriter.WriteReverse(short)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(Short)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Int32)
  name: WriteReverse(int)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_Int32_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Int32)
  name.vb: WriteReverse(Integer)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(int)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(Integer)
  nameWithType: ExtendedBinaryWriter.WriteReverse(int)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(Integer)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Int64)
  name: WriteReverse(long)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_Int64_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Int64)
  name.vb: WriteReverse(Long)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(long)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(Long)
  nameWithType: ExtendedBinaryWriter.WriteReverse(long)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(Long)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Single)
  name: WriteReverse(float)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_Single_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.Single)
  name.vb: WriteReverse(Single)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(float)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(Single)
  nameWithType: ExtendedBinaryWriter.WriteReverse(float)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(Single)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.UInt16)
  name: WriteReverse(ushort)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_UInt16_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.UInt16)
  name.vb: WriteReverse(UShort)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(ushort)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(UShort)
  nameWithType: ExtendedBinaryWriter.WriteReverse(ushort)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(UShort)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.UInt32)
  name: WriteReverse(uint)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_UInt32_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.UInt32)
  name.vb: WriteReverse(UInteger)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(uint)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(UInteger)
  nameWithType: ExtendedBinaryWriter.WriteReverse(uint)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(UInteger)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse(System.UInt64)
  name: WriteReverse(ulong)
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_System_UInt64_
  commentId: M:FluentModbus.ExtendedBinaryWriter.WriteReverse(System.UInt64)
  name.vb: WriteReverse(ULong)
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse(ulong)
  fullName.vb: FluentModbus.ExtendedBinaryWriter.WriteReverse(ULong)
  nameWithType: ExtendedBinaryWriter.WriteReverse(ulong)
  nameWithType.vb: ExtendedBinaryWriter.WriteReverse(ULong)
- uid: FluentModbus.ExtendedBinaryWriter.WriteReverse*
  name: WriteReverse
  href: api/FluentModbus.ExtendedBinaryWriter.html#FluentModbus_ExtendedBinaryWriter_WriteReverse_
  commentId: Overload:FluentModbus.ExtendedBinaryWriter.WriteReverse
  isSpec: "True"
  fullName: FluentModbus.ExtendedBinaryWriter.WriteReverse
  nameWithType: ExtendedBinaryWriter.WriteReverse
- uid: FluentModbus.IModbusRtuSerialPort
  name: IModbusRtuSerialPort
  href: api/FluentModbus.IModbusRtuSerialPort.html
  commentId: T:FluentModbus.IModbusRtuSerialPort
  fullName: FluentModbus.IModbusRtuSerialPort
  nameWithType: IModbusRtuSerialPort
- uid: FluentModbus.IModbusRtuSerialPort.Close
  name: Close()
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Close
  commentId: M:FluentModbus.IModbusRtuSerialPort.Close
  fullName: FluentModbus.IModbusRtuSerialPort.Close()
  nameWithType: IModbusRtuSerialPort.Close()
- uid: FluentModbus.IModbusRtuSerialPort.Close*
  name: Close
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Close_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.Close
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.Close
  nameWithType: IModbusRtuSerialPort.Close
- uid: FluentModbus.IModbusRtuSerialPort.IsOpen
  name: IsOpen
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_IsOpen
  commentId: P:FluentModbus.IModbusRtuSerialPort.IsOpen
  fullName: FluentModbus.IModbusRtuSerialPort.IsOpen
  nameWithType: IModbusRtuSerialPort.IsOpen
- uid: FluentModbus.IModbusRtuSerialPort.IsOpen*
  name: IsOpen
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_IsOpen_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.IsOpen
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.IsOpen
  nameWithType: IModbusRtuSerialPort.IsOpen
- uid: FluentModbus.IModbusRtuSerialPort.Open
  name: Open()
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Open
  commentId: M:FluentModbus.IModbusRtuSerialPort.Open
  fullName: FluentModbus.IModbusRtuSerialPort.Open()
  nameWithType: IModbusRtuSerialPort.Open()
- uid: FluentModbus.IModbusRtuSerialPort.Open*
  name: Open
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Open_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.Open
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.Open
  nameWithType: IModbusRtuSerialPort.Open
- uid: FluentModbus.IModbusRtuSerialPort.PortName
  name: PortName
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_PortName
  commentId: P:FluentModbus.IModbusRtuSerialPort.PortName
  fullName: FluentModbus.IModbusRtuSerialPort.PortName
  nameWithType: IModbusRtuSerialPort.PortName
- uid: FluentModbus.IModbusRtuSerialPort.PortName*
  name: PortName
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_PortName_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.PortName
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.PortName
  nameWithType: IModbusRtuSerialPort.PortName
- uid: FluentModbus.IModbusRtuSerialPort.Read(System.Byte[],System.Int32,System.Int32)
  name: Read(byte[], int, int)
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Read_System_Byte___System_Int32_System_Int32_
  commentId: M:FluentModbus.IModbusRtuSerialPort.Read(System.Byte[],System.Int32,System.Int32)
  name.vb: Read(Byte(), Integer, Integer)
  fullName: FluentModbus.IModbusRtuSerialPort.Read(byte[], int, int)
  fullName.vb: FluentModbus.IModbusRtuSerialPort.Read(Byte(), Integer, Integer)
  nameWithType: IModbusRtuSerialPort.Read(byte[], int, int)
  nameWithType.vb: IModbusRtuSerialPort.Read(Byte(), Integer, Integer)
- uid: FluentModbus.IModbusRtuSerialPort.Read*
  name: Read
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Read_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.Read
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.Read
  nameWithType: IModbusRtuSerialPort.Read
- uid: FluentModbus.IModbusRtuSerialPort.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadAsync(byte[], int, int, CancellationToken)
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.IModbusRtuSerialPort.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Integer, Integer, CancellationToken)
  fullName: FluentModbus.IModbusRtuSerialPort.ReadAsync(byte[], int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.IModbusRtuSerialPort.ReadAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  nameWithType: IModbusRtuSerialPort.ReadAsync(byte[], int, int, CancellationToken)
  nameWithType.vb: IModbusRtuSerialPort.ReadAsync(Byte(), Integer, Integer, CancellationToken)
- uid: FluentModbus.IModbusRtuSerialPort.ReadAsync*
  name: ReadAsync
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_ReadAsync_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.ReadAsync
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.ReadAsync
  nameWithType: IModbusRtuSerialPort.ReadAsync
- uid: FluentModbus.IModbusRtuSerialPort.Write(System.Byte[],System.Int32,System.Int32)
  name: Write(byte[], int, int)
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Write_System_Byte___System_Int32_System_Int32_
  commentId: M:FluentModbus.IModbusRtuSerialPort.Write(System.Byte[],System.Int32,System.Int32)
  name.vb: Write(Byte(), Integer, Integer)
  fullName: FluentModbus.IModbusRtuSerialPort.Write(byte[], int, int)
  fullName.vb: FluentModbus.IModbusRtuSerialPort.Write(Byte(), Integer, Integer)
  nameWithType: IModbusRtuSerialPort.Write(byte[], int, int)
  nameWithType.vb: IModbusRtuSerialPort.Write(Byte(), Integer, Integer)
- uid: FluentModbus.IModbusRtuSerialPort.Write*
  name: Write
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_Write_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.Write
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.Write
  nameWithType: IModbusRtuSerialPort.Write
- uid: FluentModbus.IModbusRtuSerialPort.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: WriteAsync(byte[], int, int, CancellationToken)
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.IModbusRtuSerialPort.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Integer, Integer, CancellationToken)
  fullName: FluentModbus.IModbusRtuSerialPort.WriteAsync(byte[], int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.IModbusRtuSerialPort.WriteAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  nameWithType: IModbusRtuSerialPort.WriteAsync(byte[], int, int, CancellationToken)
  nameWithType.vb: IModbusRtuSerialPort.WriteAsync(Byte(), Integer, Integer, CancellationToken)
- uid: FluentModbus.IModbusRtuSerialPort.WriteAsync*
  name: WriteAsync
  href: api/FluentModbus.IModbusRtuSerialPort.html#FluentModbus_IModbusRtuSerialPort_WriteAsync_
  commentId: Overload:FluentModbus.IModbusRtuSerialPort.WriteAsync
  isSpec: "True"
  fullName: FluentModbus.IModbusRtuSerialPort.WriteAsync
  nameWithType: IModbusRtuSerialPort.WriteAsync
- uid: FluentModbus.ITcpClientProvider
  name: ITcpClientProvider
  href: api/FluentModbus.ITcpClientProvider.html
  commentId: T:FluentModbus.ITcpClientProvider
  fullName: FluentModbus.ITcpClientProvider
  nameWithType: ITcpClientProvider
- uid: FluentModbus.ITcpClientProvider.AcceptTcpClientAsync
  name: AcceptTcpClientAsync()
  href: api/FluentModbus.ITcpClientProvider.html#FluentModbus_ITcpClientProvider_AcceptTcpClientAsync
  commentId: M:FluentModbus.ITcpClientProvider.AcceptTcpClientAsync
  fullName: FluentModbus.ITcpClientProvider.AcceptTcpClientAsync()
  nameWithType: ITcpClientProvider.AcceptTcpClientAsync()
- uid: FluentModbus.ITcpClientProvider.AcceptTcpClientAsync*
  name: AcceptTcpClientAsync
  href: api/FluentModbus.ITcpClientProvider.html#FluentModbus_ITcpClientProvider_AcceptTcpClientAsync_
  commentId: Overload:FluentModbus.ITcpClientProvider.AcceptTcpClientAsync
  isSpec: "True"
  fullName: FluentModbus.ITcpClientProvider.AcceptTcpClientAsync
  nameWithType: ITcpClientProvider.AcceptTcpClientAsync
- uid: FluentModbus.ModbusClient
  name: ModbusClient
  href: api/FluentModbus.ModbusClient.html
  commentId: T:FluentModbus.ModbusClient
  fullName: FluentModbus.ModbusClient
  nameWithType: ModbusClient
- uid: FluentModbus.ModbusClient.MaskWriteRegister
  name: MaskWriteRegister()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_MaskWriteRegister
  commentId: M:FluentModbus.ModbusClient.MaskWriteRegister
  fullName: FluentModbus.ModbusClient.MaskWriteRegister()
  nameWithType: ModbusClient.MaskWriteRegister()
- uid: FluentModbus.ModbusClient.MaskWriteRegister*
  name: MaskWriteRegister
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_MaskWriteRegister_
  commentId: Overload:FluentModbus.ModbusClient.MaskWriteRegister
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.MaskWriteRegister
  nameWithType: ModbusClient.MaskWriteRegister
- uid: FluentModbus.ModbusClient.MaskWriteRegisterAsync
  name: MaskWriteRegisterAsync()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_MaskWriteRegisterAsync
  commentId: M:FluentModbus.ModbusClient.MaskWriteRegisterAsync
  fullName: FluentModbus.ModbusClient.MaskWriteRegisterAsync()
  nameWithType: ModbusClient.MaskWriteRegisterAsync()
- uid: FluentModbus.ModbusClient.MaskWriteRegisterAsync*
  name: MaskWriteRegisterAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_MaskWriteRegisterAsync_
  commentId: Overload:FluentModbus.ModbusClient.MaskWriteRegisterAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.MaskWriteRegisterAsync
  nameWithType: ModbusClient.MaskWriteRegisterAsync
- uid: FluentModbus.ModbusClient.ReadCoils(System.Int32,System.Int32,System.Int32)
  name: ReadCoils(int, int, int)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadCoils_System_Int32_System_Int32_System_Int32_
  commentId: M:FluentModbus.ModbusClient.ReadCoils(System.Int32,System.Int32,System.Int32)
  name.vb: ReadCoils(Integer, Integer, Integer)
  fullName: FluentModbus.ModbusClient.ReadCoils(int, int, int)
  fullName.vb: FluentModbus.ModbusClient.ReadCoils(Integer, Integer, Integer)
  nameWithType: ModbusClient.ReadCoils(int, int, int)
  nameWithType.vb: ModbusClient.ReadCoils(Integer, Integer, Integer)
- uid: FluentModbus.ModbusClient.ReadCoils*
  name: ReadCoils
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadCoils_
  commentId: Overload:FluentModbus.ModbusClient.ReadCoils
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadCoils
  nameWithType: ModbusClient.ReadCoils
- uid: FluentModbus.ModbusClient.ReadCoilsAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadCoilsAsync(int, int, int, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadCoilsAsync_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadCoilsAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadCoilsAsync(Integer, Integer, Integer, CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadCoilsAsync(int, int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadCoilsAsync(Integer, Integer, Integer, System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadCoilsAsync(int, int, int, CancellationToken)
  nameWithType.vb: ModbusClient.ReadCoilsAsync(Integer, Integer, Integer, CancellationToken)
- uid: FluentModbus.ModbusClient.ReadCoilsAsync*
  name: ReadCoilsAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadCoilsAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadCoilsAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadCoilsAsync
  nameWithType: ModbusClient.ReadCoilsAsync
- uid: FluentModbus.ModbusClient.ReadDiscreteInputs(System.Int32,System.Int32,System.Int32)
  name: ReadDiscreteInputs(int, int, int)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadDiscreteInputs_System_Int32_System_Int32_System_Int32_
  commentId: M:FluentModbus.ModbusClient.ReadDiscreteInputs(System.Int32,System.Int32,System.Int32)
  name.vb: ReadDiscreteInputs(Integer, Integer, Integer)
  fullName: FluentModbus.ModbusClient.ReadDiscreteInputs(int, int, int)
  fullName.vb: FluentModbus.ModbusClient.ReadDiscreteInputs(Integer, Integer, Integer)
  nameWithType: ModbusClient.ReadDiscreteInputs(int, int, int)
  nameWithType.vb: ModbusClient.ReadDiscreteInputs(Integer, Integer, Integer)
- uid: FluentModbus.ModbusClient.ReadDiscreteInputs*
  name: ReadDiscreteInputs
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadDiscreteInputs_
  commentId: Overload:FluentModbus.ModbusClient.ReadDiscreteInputs
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadDiscreteInputs
  nameWithType: ModbusClient.ReadDiscreteInputs
- uid: FluentModbus.ModbusClient.ReadDiscreteInputsAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadDiscreteInputsAsync(int, int, int, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadDiscreteInputsAsync_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadDiscreteInputsAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadDiscreteInputsAsync(Integer, Integer, Integer, CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadDiscreteInputsAsync(int, int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadDiscreteInputsAsync(Integer, Integer, Integer, System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadDiscreteInputsAsync(int, int, int, CancellationToken)
  nameWithType.vb: ModbusClient.ReadDiscreteInputsAsync(Integer, Integer, Integer, CancellationToken)
- uid: FluentModbus.ModbusClient.ReadDiscreteInputsAsync*
  name: ReadDiscreteInputsAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadDiscreteInputsAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadDiscreteInputsAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadDiscreteInputsAsync
  nameWithType: ModbusClient.ReadDiscreteInputsAsync
- uid: FluentModbus.ModbusClient.ReadFifoQueue
  name: ReadFifoQueue()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFifoQueue
  commentId: M:FluentModbus.ModbusClient.ReadFifoQueue
  fullName: FluentModbus.ModbusClient.ReadFifoQueue()
  nameWithType: ModbusClient.ReadFifoQueue()
- uid: FluentModbus.ModbusClient.ReadFifoQueue*
  name: ReadFifoQueue
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFifoQueue_
  commentId: Overload:FluentModbus.ModbusClient.ReadFifoQueue
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadFifoQueue
  nameWithType: ModbusClient.ReadFifoQueue
- uid: FluentModbus.ModbusClient.ReadFifoQueueAsync
  name: ReadFifoQueueAsync()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFifoQueueAsync
  commentId: M:FluentModbus.ModbusClient.ReadFifoQueueAsync
  fullName: FluentModbus.ModbusClient.ReadFifoQueueAsync()
  nameWithType: ModbusClient.ReadFifoQueueAsync()
- uid: FluentModbus.ModbusClient.ReadFifoQueueAsync*
  name: ReadFifoQueueAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFifoQueueAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadFifoQueueAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadFifoQueueAsync
  nameWithType: ModbusClient.ReadFifoQueueAsync
- uid: FluentModbus.ModbusClient.ReadFileRecord
  name: ReadFileRecord()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFileRecord
  commentId: M:FluentModbus.ModbusClient.ReadFileRecord
  fullName: FluentModbus.ModbusClient.ReadFileRecord()
  nameWithType: ModbusClient.ReadFileRecord()
- uid: FluentModbus.ModbusClient.ReadFileRecord*
  name: ReadFileRecord
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFileRecord_
  commentId: Overload:FluentModbus.ModbusClient.ReadFileRecord
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadFileRecord
  nameWithType: ModbusClient.ReadFileRecord
- uid: FluentModbus.ModbusClient.ReadFileRecordAsync
  name: ReadFileRecordAsync()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFileRecordAsync
  commentId: M:FluentModbus.ModbusClient.ReadFileRecordAsync
  fullName: FluentModbus.ModbusClient.ReadFileRecordAsync()
  nameWithType: ModbusClient.ReadFileRecordAsync()
- uid: FluentModbus.ModbusClient.ReadFileRecordAsync*
  name: ReadFileRecordAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadFileRecordAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadFileRecordAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadFileRecordAsync
  nameWithType: ModbusClient.ReadFileRecordAsync
- uid: FluentModbus.ModbusClient.ReadHoldingRegisters(System.Byte,System.UInt16,System.UInt16)
  name: ReadHoldingRegisters(byte, ushort, ushort)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadHoldingRegisters_System_Byte_System_UInt16_System_UInt16_
  commentId: M:FluentModbus.ModbusClient.ReadHoldingRegisters(System.Byte,System.UInt16,System.UInt16)
  name.vb: ReadHoldingRegisters(Byte, UShort, UShort)
  fullName: FluentModbus.ModbusClient.ReadHoldingRegisters(byte, ushort, ushort)
  fullName.vb: FluentModbus.ModbusClient.ReadHoldingRegisters(Byte, UShort, UShort)
  nameWithType: ModbusClient.ReadHoldingRegisters(byte, ushort, ushort)
  nameWithType.vb: ModbusClient.ReadHoldingRegisters(Byte, UShort, UShort)
- uid: FluentModbus.ModbusClient.ReadHoldingRegisters*
  name: ReadHoldingRegisters
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadHoldingRegisters_
  commentId: Overload:FluentModbus.ModbusClient.ReadHoldingRegisters
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadHoldingRegisters
  nameWithType: ModbusClient.ReadHoldingRegisters
- uid: FluentModbus.ModbusClient.ReadHoldingRegistersAsync(System.Byte,System.UInt16,System.UInt16,System.Threading.CancellationToken)
  name: ReadHoldingRegistersAsync(byte, ushort, ushort, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadHoldingRegistersAsync_System_Byte_System_UInt16_System_UInt16_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadHoldingRegistersAsync(System.Byte,System.UInt16,System.UInt16,System.Threading.CancellationToken)
  name.vb: ReadHoldingRegistersAsync(Byte, UShort, UShort, CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadHoldingRegistersAsync(byte, ushort, ushort, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadHoldingRegistersAsync(Byte, UShort, UShort, System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadHoldingRegistersAsync(byte, ushort, ushort, CancellationToken)
  nameWithType.vb: ModbusClient.ReadHoldingRegistersAsync(Byte, UShort, UShort, CancellationToken)
- uid: FluentModbus.ModbusClient.ReadHoldingRegistersAsync*
  name: ReadHoldingRegistersAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadHoldingRegistersAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadHoldingRegistersAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadHoldingRegistersAsync
  nameWithType: ModbusClient.ReadHoldingRegistersAsync
- uid: FluentModbus.ModbusClient.ReadHoldingRegistersAsync``1(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadHoldingRegistersAsync<T>(int, int, int, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadHoldingRegistersAsync__1_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadHoldingRegistersAsync``1(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadHoldingRegistersAsync(Of T)(Integer, Integer, Integer, CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadHoldingRegistersAsync<T>(int, int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadHoldingRegistersAsync(Of T)(Integer, Integer, Integer, System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadHoldingRegistersAsync<T>(int, int, int, CancellationToken)
  nameWithType.vb: ModbusClient.ReadHoldingRegistersAsync(Of T)(Integer, Integer, Integer, CancellationToken)
- uid: FluentModbus.ModbusClient.ReadHoldingRegisters``1(System.Int32,System.Int32,System.Int32)
  name: ReadHoldingRegisters<T>(int, int, int)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadHoldingRegisters__1_System_Int32_System_Int32_System_Int32_
  commentId: M:FluentModbus.ModbusClient.ReadHoldingRegisters``1(System.Int32,System.Int32,System.Int32)
  name.vb: ReadHoldingRegisters(Of T)(Integer, Integer, Integer)
  fullName: FluentModbus.ModbusClient.ReadHoldingRegisters<T>(int, int, int)
  fullName.vb: FluentModbus.ModbusClient.ReadHoldingRegisters(Of T)(Integer, Integer, Integer)
  nameWithType: ModbusClient.ReadHoldingRegisters<T>(int, int, int)
  nameWithType.vb: ModbusClient.ReadHoldingRegisters(Of T)(Integer, Integer, Integer)
- uid: FluentModbus.ModbusClient.ReadInputRegisters(System.Byte,System.UInt16,System.UInt16)
  name: ReadInputRegisters(byte, ushort, ushort)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadInputRegisters_System_Byte_System_UInt16_System_UInt16_
  commentId: M:FluentModbus.ModbusClient.ReadInputRegisters(System.Byte,System.UInt16,System.UInt16)
  name.vb: ReadInputRegisters(Byte, UShort, UShort)
  fullName: FluentModbus.ModbusClient.ReadInputRegisters(byte, ushort, ushort)
  fullName.vb: FluentModbus.ModbusClient.ReadInputRegisters(Byte, UShort, UShort)
  nameWithType: ModbusClient.ReadInputRegisters(byte, ushort, ushort)
  nameWithType.vb: ModbusClient.ReadInputRegisters(Byte, UShort, UShort)
- uid: FluentModbus.ModbusClient.ReadInputRegisters*
  name: ReadInputRegisters
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadInputRegisters_
  commentId: Overload:FluentModbus.ModbusClient.ReadInputRegisters
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadInputRegisters
  nameWithType: ModbusClient.ReadInputRegisters
- uid: FluentModbus.ModbusClient.ReadInputRegistersAsync(System.Byte,System.UInt16,System.UInt16,System.Threading.CancellationToken)
  name: ReadInputRegistersAsync(byte, ushort, ushort, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadInputRegistersAsync_System_Byte_System_UInt16_System_UInt16_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadInputRegistersAsync(System.Byte,System.UInt16,System.UInt16,System.Threading.CancellationToken)
  name.vb: ReadInputRegistersAsync(Byte, UShort, UShort, CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadInputRegistersAsync(byte, ushort, ushort, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadInputRegistersAsync(Byte, UShort, UShort, System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadInputRegistersAsync(byte, ushort, ushort, CancellationToken)
  nameWithType.vb: ModbusClient.ReadInputRegistersAsync(Byte, UShort, UShort, CancellationToken)
- uid: FluentModbus.ModbusClient.ReadInputRegistersAsync*
  name: ReadInputRegistersAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadInputRegistersAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadInputRegistersAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadInputRegistersAsync
  nameWithType: ModbusClient.ReadInputRegistersAsync
- uid: FluentModbus.ModbusClient.ReadInputRegistersAsync``1(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadInputRegistersAsync<T>(int, int, int, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadInputRegistersAsync__1_System_Int32_System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadInputRegistersAsync``1(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadInputRegistersAsync(Of T)(Integer, Integer, Integer, CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadInputRegistersAsync<T>(int, int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadInputRegistersAsync(Of T)(Integer, Integer, Integer, System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadInputRegistersAsync<T>(int, int, int, CancellationToken)
  nameWithType.vb: ModbusClient.ReadInputRegistersAsync(Of T)(Integer, Integer, Integer, CancellationToken)
- uid: FluentModbus.ModbusClient.ReadInputRegisters``1(System.Int32,System.Int32,System.Int32)
  name: ReadInputRegisters<T>(int, int, int)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadInputRegisters__1_System_Int32_System_Int32_System_Int32_
  commentId: M:FluentModbus.ModbusClient.ReadInputRegisters``1(System.Int32,System.Int32,System.Int32)
  name.vb: ReadInputRegisters(Of T)(Integer, Integer, Integer)
  fullName: FluentModbus.ModbusClient.ReadInputRegisters<T>(int, int, int)
  fullName.vb: FluentModbus.ModbusClient.ReadInputRegisters(Of T)(Integer, Integer, Integer)
  nameWithType: ModbusClient.ReadInputRegisters<T>(int, int, int)
  nameWithType.vb: ModbusClient.ReadInputRegisters(Of T)(Integer, Integer, Integer)
- uid: FluentModbus.ModbusClient.ReadWriteMultipleRegisters(System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[])
  name: ReadWriteMultipleRegisters(byte, ushort, ushort, ushort, byte[])
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadWriteMultipleRegisters_System_Byte_System_UInt16_System_UInt16_System_UInt16_System_Byte___
  commentId: M:FluentModbus.ModbusClient.ReadWriteMultipleRegisters(System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[])
  name.vb: ReadWriteMultipleRegisters(Byte, UShort, UShort, UShort, Byte())
  fullName: FluentModbus.ModbusClient.ReadWriteMultipleRegisters(byte, ushort, ushort, ushort, byte[])
  fullName.vb: FluentModbus.ModbusClient.ReadWriteMultipleRegisters(Byte, UShort, UShort, UShort, Byte())
  nameWithType: ModbusClient.ReadWriteMultipleRegisters(byte, ushort, ushort, ushort, byte[])
  nameWithType.vb: ModbusClient.ReadWriteMultipleRegisters(Byte, UShort, UShort, UShort, Byte())
- uid: FluentModbus.ModbusClient.ReadWriteMultipleRegisters*
  name: ReadWriteMultipleRegisters
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadWriteMultipleRegisters_
  commentId: Overload:FluentModbus.ModbusClient.ReadWriteMultipleRegisters
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadWriteMultipleRegisters
  nameWithType: ModbusClient.ReadWriteMultipleRegisters
- uid: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync(System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[],System.Threading.CancellationToken)
  name: ReadWriteMultipleRegistersAsync(byte, ushort, ushort, ushort, byte[], CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadWriteMultipleRegistersAsync_System_Byte_System_UInt16_System_UInt16_System_UInt16_System_Byte___System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync(System.Byte,System.UInt16,System.UInt16,System.UInt16,System.Byte[],System.Threading.CancellationToken)
  name.vb: ReadWriteMultipleRegistersAsync(Byte, UShort, UShort, UShort, Byte(), CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync(byte, ushort, ushort, ushort, byte[], System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync(Byte, UShort, UShort, UShort, Byte(), System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadWriteMultipleRegistersAsync(byte, ushort, ushort, ushort, byte[], CancellationToken)
  nameWithType.vb: ModbusClient.ReadWriteMultipleRegistersAsync(Byte, UShort, UShort, UShort, Byte(), CancellationToken)
- uid: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync*
  name: ReadWriteMultipleRegistersAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadWriteMultipleRegistersAsync_
  commentId: Overload:FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync
  nameWithType: ModbusClient.ReadWriteMultipleRegistersAsync
- uid: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync``2(System.Int32,System.Int32,System.Int32,System.Int32,``1[],System.Threading.CancellationToken)
  name: ReadWriteMultipleRegistersAsync<TRead, TWrite>(int, int, int, int, TWrite[], CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadWriteMultipleRegistersAsync__2_System_Int32_System_Int32_System_Int32_System_Int32___1___System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync``2(System.Int32,System.Int32,System.Int32,System.Int32,``1[],System.Threading.CancellationToken)
  name.vb: ReadWriteMultipleRegistersAsync(Of TRead, TWrite)(Integer, Integer, Integer, Integer, TWrite(), CancellationToken)
  fullName: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync<TRead, TWrite>(int, int, int, int, TWrite[], System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.ReadWriteMultipleRegistersAsync(Of TRead, TWrite)(Integer, Integer, Integer, Integer, TWrite(), System.Threading.CancellationToken)
  nameWithType: ModbusClient.ReadWriteMultipleRegistersAsync<TRead, TWrite>(int, int, int, int, TWrite[], CancellationToken)
  nameWithType.vb: ModbusClient.ReadWriteMultipleRegistersAsync(Of TRead, TWrite)(Integer, Integer, Integer, Integer, TWrite(), CancellationToken)
- uid: FluentModbus.ModbusClient.ReadWriteMultipleRegisters``2(System.Int32,System.Int32,System.Int32,System.Int32,``1[])
  name: ReadWriteMultipleRegisters<TRead, TWrite>(int, int, int, int, TWrite[])
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_ReadWriteMultipleRegisters__2_System_Int32_System_Int32_System_Int32_System_Int32___1___
  commentId: M:FluentModbus.ModbusClient.ReadWriteMultipleRegisters``2(System.Int32,System.Int32,System.Int32,System.Int32,``1[])
  name.vb: ReadWriteMultipleRegisters(Of TRead, TWrite)(Integer, Integer, Integer, Integer, TWrite())
  fullName: FluentModbus.ModbusClient.ReadWriteMultipleRegisters<TRead, TWrite>(int, int, int, int, TWrite[])
  fullName.vb: FluentModbus.ModbusClient.ReadWriteMultipleRegisters(Of TRead, TWrite)(Integer, Integer, Integer, Integer, TWrite())
  nameWithType: ModbusClient.ReadWriteMultipleRegisters<TRead, TWrite>(int, int, int, int, TWrite[])
  nameWithType.vb: ModbusClient.ReadWriteMultipleRegisters(Of TRead, TWrite)(Integer, Integer, Integer, Integer, TWrite())
- uid: FluentModbus.ModbusClient.TransceiveFrame(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter})
  name: TransceiveFrame(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_TransceiveFrame_System_Byte_FluentModbus_ModbusFunctionCode_System_Action_FluentModbus_ExtendedBinaryWriter__
  commentId: M:FluentModbus.ModbusClient.TransceiveFrame(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter})
  name.vb: TransceiveFrame(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter))
  fullName: FluentModbus.ModbusClient.TransceiveFrame(byte, FluentModbus.ModbusFunctionCode, System.Action<FluentModbus.ExtendedBinaryWriter>)
  fullName.vb: FluentModbus.ModbusClient.TransceiveFrame(Byte, FluentModbus.ModbusFunctionCode, System.Action(Of FluentModbus.ExtendedBinaryWriter))
  nameWithType: ModbusClient.TransceiveFrame(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>)
  nameWithType.vb: ModbusClient.TransceiveFrame(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter))
- uid: FluentModbus.ModbusClient.TransceiveFrame*
  name: TransceiveFrame
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_TransceiveFrame_
  commentId: Overload:FluentModbus.ModbusClient.TransceiveFrame
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.TransceiveFrame
  nameWithType: ModbusClient.TransceiveFrame
- uid: FluentModbus.ModbusClient.TransceiveFrameAsync(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter},System.Threading.CancellationToken)
  name: TransceiveFrameAsync(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_TransceiveFrameAsync_System_Byte_FluentModbus_ModbusFunctionCode_System_Action_FluentModbus_ExtendedBinaryWriter__System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.TransceiveFrameAsync(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter},System.Threading.CancellationToken)
  name.vb: TransceiveFrameAsync(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter), CancellationToken)
  fullName: FluentModbus.ModbusClient.TransceiveFrameAsync(byte, FluentModbus.ModbusFunctionCode, System.Action<FluentModbus.ExtendedBinaryWriter>, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.TransceiveFrameAsync(Byte, FluentModbus.ModbusFunctionCode, System.Action(Of FluentModbus.ExtendedBinaryWriter), System.Threading.CancellationToken)
  nameWithType: ModbusClient.TransceiveFrameAsync(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>, CancellationToken)
  nameWithType.vb: ModbusClient.TransceiveFrameAsync(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter), CancellationToken)
- uid: FluentModbus.ModbusClient.TransceiveFrameAsync*
  name: TransceiveFrameAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_TransceiveFrameAsync_
  commentId: Overload:FluentModbus.ModbusClient.TransceiveFrameAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.TransceiveFrameAsync
  nameWithType: ModbusClient.TransceiveFrameAsync
- uid: FluentModbus.ModbusClient.WriteFileRecord
  name: WriteFileRecord()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteFileRecord
  commentId: M:FluentModbus.ModbusClient.WriteFileRecord
  fullName: FluentModbus.ModbusClient.WriteFileRecord()
  nameWithType: ModbusClient.WriteFileRecord()
- uid: FluentModbus.ModbusClient.WriteFileRecord*
  name: WriteFileRecord
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteFileRecord_
  commentId: Overload:FluentModbus.ModbusClient.WriteFileRecord
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteFileRecord
  nameWithType: ModbusClient.WriteFileRecord
- uid: FluentModbus.ModbusClient.WriteFileRecordAsync
  name: WriteFileRecordAsync()
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteFileRecordAsync
  commentId: M:FluentModbus.ModbusClient.WriteFileRecordAsync
  fullName: FluentModbus.ModbusClient.WriteFileRecordAsync()
  nameWithType: ModbusClient.WriteFileRecordAsync()
- uid: FluentModbus.ModbusClient.WriteFileRecordAsync*
  name: WriteFileRecordAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteFileRecordAsync_
  commentId: Overload:FluentModbus.ModbusClient.WriteFileRecordAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteFileRecordAsync
  nameWithType: ModbusClient.WriteFileRecordAsync
- uid: FluentModbus.ModbusClient.WriteMultipleCoils(System.Int32,System.Int32,System.Boolean[])
  name: WriteMultipleCoils(int, int, bool[])
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleCoils_System_Int32_System_Int32_System_Boolean___
  commentId: M:FluentModbus.ModbusClient.WriteMultipleCoils(System.Int32,System.Int32,System.Boolean[])
  name.vb: WriteMultipleCoils(Integer, Integer, Boolean())
  fullName: FluentModbus.ModbusClient.WriteMultipleCoils(int, int, bool[])
  fullName.vb: FluentModbus.ModbusClient.WriteMultipleCoils(Integer, Integer, Boolean())
  nameWithType: ModbusClient.WriteMultipleCoils(int, int, bool[])
  nameWithType.vb: ModbusClient.WriteMultipleCoils(Integer, Integer, Boolean())
- uid: FluentModbus.ModbusClient.WriteMultipleCoils*
  name: WriteMultipleCoils
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleCoils_
  commentId: Overload:FluentModbus.ModbusClient.WriteMultipleCoils
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteMultipleCoils
  nameWithType: ModbusClient.WriteMultipleCoils
- uid: FluentModbus.ModbusClient.WriteMultipleCoilsAsync(System.Int32,System.Int32,System.Boolean[],System.Threading.CancellationToken)
  name: WriteMultipleCoilsAsync(int, int, bool[], CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleCoilsAsync_System_Int32_System_Int32_System_Boolean___System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteMultipleCoilsAsync(System.Int32,System.Int32,System.Boolean[],System.Threading.CancellationToken)
  name.vb: WriteMultipleCoilsAsync(Integer, Integer, Boolean(), CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteMultipleCoilsAsync(int, int, bool[], System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteMultipleCoilsAsync(Integer, Integer, Boolean(), System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteMultipleCoilsAsync(int, int, bool[], CancellationToken)
  nameWithType.vb: ModbusClient.WriteMultipleCoilsAsync(Integer, Integer, Boolean(), CancellationToken)
- uid: FluentModbus.ModbusClient.WriteMultipleCoilsAsync*
  name: WriteMultipleCoilsAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleCoilsAsync_
  commentId: Overload:FluentModbus.ModbusClient.WriteMultipleCoilsAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteMultipleCoilsAsync
  nameWithType: ModbusClient.WriteMultipleCoilsAsync
- uid: FluentModbus.ModbusClient.WriteMultipleRegisters(System.Byte,System.UInt16,System.Byte[])
  name: WriteMultipleRegisters(byte, ushort, byte[])
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleRegisters_System_Byte_System_UInt16_System_Byte___
  commentId: M:FluentModbus.ModbusClient.WriteMultipleRegisters(System.Byte,System.UInt16,System.Byte[])
  name.vb: WriteMultipleRegisters(Byte, UShort, Byte())
  fullName: FluentModbus.ModbusClient.WriteMultipleRegisters(byte, ushort, byte[])
  fullName.vb: FluentModbus.ModbusClient.WriteMultipleRegisters(Byte, UShort, Byte())
  nameWithType: ModbusClient.WriteMultipleRegisters(byte, ushort, byte[])
  nameWithType.vb: ModbusClient.WriteMultipleRegisters(Byte, UShort, Byte())
- uid: FluentModbus.ModbusClient.WriteMultipleRegisters*
  name: WriteMultipleRegisters
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleRegisters_
  commentId: Overload:FluentModbus.ModbusClient.WriteMultipleRegisters
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteMultipleRegisters
  nameWithType: ModbusClient.WriteMultipleRegisters
- uid: FluentModbus.ModbusClient.WriteMultipleRegistersAsync(System.Byte,System.UInt16,System.Byte[],System.Threading.CancellationToken)
  name: WriteMultipleRegistersAsync(byte, ushort, byte[], CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleRegistersAsync_System_Byte_System_UInt16_System_Byte___System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteMultipleRegistersAsync(System.Byte,System.UInt16,System.Byte[],System.Threading.CancellationToken)
  name.vb: WriteMultipleRegistersAsync(Byte, UShort, Byte(), CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteMultipleRegistersAsync(byte, ushort, byte[], System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteMultipleRegistersAsync(Byte, UShort, Byte(), System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteMultipleRegistersAsync(byte, ushort, byte[], CancellationToken)
  nameWithType.vb: ModbusClient.WriteMultipleRegistersAsync(Byte, UShort, Byte(), CancellationToken)
- uid: FluentModbus.ModbusClient.WriteMultipleRegistersAsync*
  name: WriteMultipleRegistersAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleRegistersAsync_
  commentId: Overload:FluentModbus.ModbusClient.WriteMultipleRegistersAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteMultipleRegistersAsync
  nameWithType: ModbusClient.WriteMultipleRegistersAsync
- uid: FluentModbus.ModbusClient.WriteMultipleRegistersAsync``1(System.Int32,System.Int32,``0[],System.Threading.CancellationToken)
  name: WriteMultipleRegistersAsync<T>(int, int, T[], CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleRegistersAsync__1_System_Int32_System_Int32___0___System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteMultipleRegistersAsync``1(System.Int32,System.Int32,``0[],System.Threading.CancellationToken)
  name.vb: WriteMultipleRegistersAsync(Of T)(Integer, Integer, T(), CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteMultipleRegistersAsync<T>(int, int, T[], System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteMultipleRegistersAsync(Of T)(Integer, Integer, T(), System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteMultipleRegistersAsync<T>(int, int, T[], CancellationToken)
  nameWithType.vb: ModbusClient.WriteMultipleRegistersAsync(Of T)(Integer, Integer, T(), CancellationToken)
- uid: FluentModbus.ModbusClient.WriteMultipleRegisters``1(System.Int32,System.Int32,``0[])
  name: WriteMultipleRegisters<T>(int, int, T[])
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteMultipleRegisters__1_System_Int32_System_Int32___0___
  commentId: M:FluentModbus.ModbusClient.WriteMultipleRegisters``1(System.Int32,System.Int32,``0[])
  name.vb: WriteMultipleRegisters(Of T)(Integer, Integer, T())
  fullName: FluentModbus.ModbusClient.WriteMultipleRegisters<T>(int, int, T[])
  fullName.vb: FluentModbus.ModbusClient.WriteMultipleRegisters(Of T)(Integer, Integer, T())
  nameWithType: ModbusClient.WriteMultipleRegisters<T>(int, int, T[])
  nameWithType.vb: ModbusClient.WriteMultipleRegisters(Of T)(Integer, Integer, T())
- uid: FluentModbus.ModbusClient.WriteSingleCoil(System.Int32,System.Int32,System.Boolean)
  name: WriteSingleCoil(int, int, bool)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleCoil_System_Int32_System_Int32_System_Boolean_
  commentId: M:FluentModbus.ModbusClient.WriteSingleCoil(System.Int32,System.Int32,System.Boolean)
  name.vb: WriteSingleCoil(Integer, Integer, Boolean)
  fullName: FluentModbus.ModbusClient.WriteSingleCoil(int, int, bool)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleCoil(Integer, Integer, Boolean)
  nameWithType: ModbusClient.WriteSingleCoil(int, int, bool)
  nameWithType.vb: ModbusClient.WriteSingleCoil(Integer, Integer, Boolean)
- uid: FluentModbus.ModbusClient.WriteSingleCoil*
  name: WriteSingleCoil
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleCoil_
  commentId: Overload:FluentModbus.ModbusClient.WriteSingleCoil
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteSingleCoil
  nameWithType: ModbusClient.WriteSingleCoil
- uid: FluentModbus.ModbusClient.WriteSingleCoilAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  name: WriteSingleCoilAsync(int, int, bool, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleCoilAsync_System_Int32_System_Int32_System_Boolean_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteSingleCoilAsync(System.Int32,System.Int32,System.Boolean,System.Threading.CancellationToken)
  name.vb: WriteSingleCoilAsync(Integer, Integer, Boolean, CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteSingleCoilAsync(int, int, bool, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleCoilAsync(Integer, Integer, Boolean, System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteSingleCoilAsync(int, int, bool, CancellationToken)
  nameWithType.vb: ModbusClient.WriteSingleCoilAsync(Integer, Integer, Boolean, CancellationToken)
- uid: FluentModbus.ModbusClient.WriteSingleCoilAsync*
  name: WriteSingleCoilAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleCoilAsync_
  commentId: Overload:FluentModbus.ModbusClient.WriteSingleCoilAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteSingleCoilAsync
  nameWithType: ModbusClient.WriteSingleCoilAsync
- uid: FluentModbus.ModbusClient.WriteSingleRegister(System.Byte,System.UInt16,System.Byte[])
  name: WriteSingleRegister(byte, ushort, byte[])
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegister_System_Byte_System_UInt16_System_Byte___
  commentId: M:FluentModbus.ModbusClient.WriteSingleRegister(System.Byte,System.UInt16,System.Byte[])
  name.vb: WriteSingleRegister(Byte, UShort, Byte())
  fullName: FluentModbus.ModbusClient.WriteSingleRegister(byte, ushort, byte[])
  fullName.vb: FluentModbus.ModbusClient.WriteSingleRegister(Byte, UShort, Byte())
  nameWithType: ModbusClient.WriteSingleRegister(byte, ushort, byte[])
  nameWithType.vb: ModbusClient.WriteSingleRegister(Byte, UShort, Byte())
- uid: FluentModbus.ModbusClient.WriteSingleRegister(System.Int32,System.Int32,System.Int16)
  name: WriteSingleRegister(int, int, short)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegister_System_Int32_System_Int32_System_Int16_
  commentId: M:FluentModbus.ModbusClient.WriteSingleRegister(System.Int32,System.Int32,System.Int16)
  name.vb: WriteSingleRegister(Integer, Integer, Short)
  fullName: FluentModbus.ModbusClient.WriteSingleRegister(int, int, short)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleRegister(Integer, Integer, Short)
  nameWithType: ModbusClient.WriteSingleRegister(int, int, short)
  nameWithType.vb: ModbusClient.WriteSingleRegister(Integer, Integer, Short)
- uid: FluentModbus.ModbusClient.WriteSingleRegister(System.Int32,System.Int32,System.UInt16)
  name: WriteSingleRegister(int, int, ushort)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegister_System_Int32_System_Int32_System_UInt16_
  commentId: M:FluentModbus.ModbusClient.WriteSingleRegister(System.Int32,System.Int32,System.UInt16)
  name.vb: WriteSingleRegister(Integer, Integer, UShort)
  fullName: FluentModbus.ModbusClient.WriteSingleRegister(int, int, ushort)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleRegister(Integer, Integer, UShort)
  nameWithType: ModbusClient.WriteSingleRegister(int, int, ushort)
  nameWithType.vb: ModbusClient.WriteSingleRegister(Integer, Integer, UShort)
- uid: FluentModbus.ModbusClient.WriteSingleRegister*
  name: WriteSingleRegister
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegister_
  commentId: Overload:FluentModbus.ModbusClient.WriteSingleRegister
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteSingleRegister
  nameWithType: ModbusClient.WriteSingleRegister
- uid: FluentModbus.ModbusClient.WriteSingleRegisterAsync(System.Byte,System.UInt16,System.Byte[],System.Threading.CancellationToken)
  name: WriteSingleRegisterAsync(byte, ushort, byte[], CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegisterAsync_System_Byte_System_UInt16_System_Byte___System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteSingleRegisterAsync(System.Byte,System.UInt16,System.Byte[],System.Threading.CancellationToken)
  name.vb: WriteSingleRegisterAsync(Byte, UShort, Byte(), CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteSingleRegisterAsync(byte, ushort, byte[], System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleRegisterAsync(Byte, UShort, Byte(), System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteSingleRegisterAsync(byte, ushort, byte[], CancellationToken)
  nameWithType.vb: ModbusClient.WriteSingleRegisterAsync(Byte, UShort, Byte(), CancellationToken)
- uid: FluentModbus.ModbusClient.WriteSingleRegisterAsync(System.Int32,System.Int32,System.Int16,System.Threading.CancellationToken)
  name: WriteSingleRegisterAsync(int, int, short, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegisterAsync_System_Int32_System_Int32_System_Int16_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteSingleRegisterAsync(System.Int32,System.Int32,System.Int16,System.Threading.CancellationToken)
  name.vb: WriteSingleRegisterAsync(Integer, Integer, Short, CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteSingleRegisterAsync(int, int, short, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleRegisterAsync(Integer, Integer, Short, System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteSingleRegisterAsync(int, int, short, CancellationToken)
  nameWithType.vb: ModbusClient.WriteSingleRegisterAsync(Integer, Integer, Short, CancellationToken)
- uid: FluentModbus.ModbusClient.WriteSingleRegisterAsync(System.Int32,System.Int32,System.UInt16,System.Threading.CancellationToken)
  name: WriteSingleRegisterAsync(int, int, ushort, CancellationToken)
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegisterAsync_System_Int32_System_Int32_System_UInt16_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusClient.WriteSingleRegisterAsync(System.Int32,System.Int32,System.UInt16,System.Threading.CancellationToken)
  name.vb: WriteSingleRegisterAsync(Integer, Integer, UShort, CancellationToken)
  fullName: FluentModbus.ModbusClient.WriteSingleRegisterAsync(int, int, ushort, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusClient.WriteSingleRegisterAsync(Integer, Integer, UShort, System.Threading.CancellationToken)
  nameWithType: ModbusClient.WriteSingleRegisterAsync(int, int, ushort, CancellationToken)
  nameWithType.vb: ModbusClient.WriteSingleRegisterAsync(Integer, Integer, UShort, CancellationToken)
- uid: FluentModbus.ModbusClient.WriteSingleRegisterAsync*
  name: WriteSingleRegisterAsync
  href: api/FluentModbus.ModbusClient.html#FluentModbus_ModbusClient_WriteSingleRegisterAsync_
  commentId: Overload:FluentModbus.ModbusClient.WriteSingleRegisterAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusClient.WriteSingleRegisterAsync
  nameWithType: ModbusClient.WriteSingleRegisterAsync
- uid: FluentModbus.ModbusEndianness
  name: ModbusEndianness
  href: api/FluentModbus.ModbusEndianness.html
  commentId: T:FluentModbus.ModbusEndianness
  fullName: FluentModbus.ModbusEndianness
  nameWithType: ModbusEndianness
- uid: FluentModbus.ModbusEndianness.BigEndian
  name: BigEndian
  href: api/FluentModbus.ModbusEndianness.html#FluentModbus_ModbusEndianness_BigEndian
  commentId: F:FluentModbus.ModbusEndianness.BigEndian
  fullName: FluentModbus.ModbusEndianness.BigEndian
  nameWithType: ModbusEndianness.BigEndian
- uid: FluentModbus.ModbusEndianness.LittleEndian
  name: LittleEndian
  href: api/FluentModbus.ModbusEndianness.html#FluentModbus_ModbusEndianness_LittleEndian
  commentId: F:FluentModbus.ModbusEndianness.LittleEndian
  fullName: FluentModbus.ModbusEndianness.LittleEndian
  nameWithType: ModbusEndianness.LittleEndian
- uid: FluentModbus.ModbusException
  name: ModbusException
  href: api/FluentModbus.ModbusException.html
  commentId: T:FluentModbus.ModbusException
  fullName: FluentModbus.ModbusException
  nameWithType: ModbusException
- uid: FluentModbus.ModbusException.ExceptionCode
  name: ExceptionCode
  href: api/FluentModbus.ModbusException.html#FluentModbus_ModbusException_ExceptionCode
  commentId: P:FluentModbus.ModbusException.ExceptionCode
  fullName: FluentModbus.ModbusException.ExceptionCode
  nameWithType: ModbusException.ExceptionCode
- uid: FluentModbus.ModbusException.ExceptionCode*
  name: ExceptionCode
  href: api/FluentModbus.ModbusException.html#FluentModbus_ModbusException_ExceptionCode_
  commentId: Overload:FluentModbus.ModbusException.ExceptionCode
  isSpec: "True"
  fullName: FluentModbus.ModbusException.ExceptionCode
  nameWithType: ModbusException.ExceptionCode
- uid: FluentModbus.ModbusExceptionCode
  name: ModbusExceptionCode
  href: api/FluentModbus.ModbusExceptionCode.html
  commentId: T:FluentModbus.ModbusExceptionCode
  fullName: FluentModbus.ModbusExceptionCode
  nameWithType: ModbusExceptionCode
- uid: FluentModbus.ModbusExceptionCode.Acknowledge
  name: Acknowledge
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_Acknowledge
  commentId: F:FluentModbus.ModbusExceptionCode.Acknowledge
  fullName: FluentModbus.ModbusExceptionCode.Acknowledge
  nameWithType: ModbusExceptionCode.Acknowledge
- uid: FluentModbus.ModbusExceptionCode.GatewayPathUnavailable
  name: GatewayPathUnavailable
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_GatewayPathUnavailable
  commentId: F:FluentModbus.ModbusExceptionCode.GatewayPathUnavailable
  fullName: FluentModbus.ModbusExceptionCode.GatewayPathUnavailable
  nameWithType: ModbusExceptionCode.GatewayPathUnavailable
- uid: FluentModbus.ModbusExceptionCode.GatewayTargetDeviceFailedToRespond
  name: GatewayTargetDeviceFailedToRespond
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_GatewayTargetDeviceFailedToRespond
  commentId: F:FluentModbus.ModbusExceptionCode.GatewayTargetDeviceFailedToRespond
  fullName: FluentModbus.ModbusExceptionCode.GatewayTargetDeviceFailedToRespond
  nameWithType: ModbusExceptionCode.GatewayTargetDeviceFailedToRespond
- uid: FluentModbus.ModbusExceptionCode.IllegalDataAddress
  name: IllegalDataAddress
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_IllegalDataAddress
  commentId: F:FluentModbus.ModbusExceptionCode.IllegalDataAddress
  fullName: FluentModbus.ModbusExceptionCode.IllegalDataAddress
  nameWithType: ModbusExceptionCode.IllegalDataAddress
- uid: FluentModbus.ModbusExceptionCode.IllegalDataValue
  name: IllegalDataValue
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_IllegalDataValue
  commentId: F:FluentModbus.ModbusExceptionCode.IllegalDataValue
  fullName: FluentModbus.ModbusExceptionCode.IllegalDataValue
  nameWithType: ModbusExceptionCode.IllegalDataValue
- uid: FluentModbus.ModbusExceptionCode.IllegalFunction
  name: IllegalFunction
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_IllegalFunction
  commentId: F:FluentModbus.ModbusExceptionCode.IllegalFunction
  fullName: FluentModbus.ModbusExceptionCode.IllegalFunction
  nameWithType: ModbusExceptionCode.IllegalFunction
- uid: FluentModbus.ModbusExceptionCode.MemoryParityError
  name: MemoryParityError
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_MemoryParityError
  commentId: F:FluentModbus.ModbusExceptionCode.MemoryParityError
  fullName: FluentModbus.ModbusExceptionCode.MemoryParityError
  nameWithType: ModbusExceptionCode.MemoryParityError
- uid: FluentModbus.ModbusExceptionCode.OK
  name: OK
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_OK
  commentId: F:FluentModbus.ModbusExceptionCode.OK
  fullName: FluentModbus.ModbusExceptionCode.OK
  nameWithType: ModbusExceptionCode.OK
- uid: FluentModbus.ModbusExceptionCode.ServerDeviceBusy
  name: ServerDeviceBusy
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_ServerDeviceBusy
  commentId: F:FluentModbus.ModbusExceptionCode.ServerDeviceBusy
  fullName: FluentModbus.ModbusExceptionCode.ServerDeviceBusy
  nameWithType: ModbusExceptionCode.ServerDeviceBusy
- uid: FluentModbus.ModbusExceptionCode.ServerDeviceFailure
  name: ServerDeviceFailure
  href: api/FluentModbus.ModbusExceptionCode.html#FluentModbus_ModbusExceptionCode_ServerDeviceFailure
  commentId: F:FluentModbus.ModbusExceptionCode.ServerDeviceFailure
  fullName: FluentModbus.ModbusExceptionCode.ServerDeviceFailure
  nameWithType: ModbusExceptionCode.ServerDeviceFailure
- uid: FluentModbus.ModbusFunctionCode
  name: ModbusFunctionCode
  href: api/FluentModbus.ModbusFunctionCode.html
  commentId: T:FluentModbus.ModbusFunctionCode
  fullName: FluentModbus.ModbusFunctionCode
  nameWithType: ModbusFunctionCode
- uid: FluentModbus.ModbusFunctionCode.Error
  name: Error
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_Error
  commentId: F:FluentModbus.ModbusFunctionCode.Error
  fullName: FluentModbus.ModbusFunctionCode.Error
  nameWithType: ModbusFunctionCode.Error
- uid: FluentModbus.ModbusFunctionCode.MaskWriteRegister
  name: MaskWriteRegister
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_MaskWriteRegister
  commentId: F:FluentModbus.ModbusFunctionCode.MaskWriteRegister
  fullName: FluentModbus.ModbusFunctionCode.MaskWriteRegister
  nameWithType: ModbusFunctionCode.MaskWriteRegister
- uid: FluentModbus.ModbusFunctionCode.ReadCoils
  name: ReadCoils
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadCoils
  commentId: F:FluentModbus.ModbusFunctionCode.ReadCoils
  fullName: FluentModbus.ModbusFunctionCode.ReadCoils
  nameWithType: ModbusFunctionCode.ReadCoils
- uid: FluentModbus.ModbusFunctionCode.ReadDiscreteInputs
  name: ReadDiscreteInputs
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadDiscreteInputs
  commentId: F:FluentModbus.ModbusFunctionCode.ReadDiscreteInputs
  fullName: FluentModbus.ModbusFunctionCode.ReadDiscreteInputs
  nameWithType: ModbusFunctionCode.ReadDiscreteInputs
- uid: FluentModbus.ModbusFunctionCode.ReadExceptionStatus
  name: ReadExceptionStatus
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadExceptionStatus
  commentId: F:FluentModbus.ModbusFunctionCode.ReadExceptionStatus
  fullName: FluentModbus.ModbusFunctionCode.ReadExceptionStatus
  nameWithType: ModbusFunctionCode.ReadExceptionStatus
- uid: FluentModbus.ModbusFunctionCode.ReadFifoQueue
  name: ReadFifoQueue
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadFifoQueue
  commentId: F:FluentModbus.ModbusFunctionCode.ReadFifoQueue
  fullName: FluentModbus.ModbusFunctionCode.ReadFifoQueue
  nameWithType: ModbusFunctionCode.ReadFifoQueue
- uid: FluentModbus.ModbusFunctionCode.ReadFileRecord
  name: ReadFileRecord
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadFileRecord
  commentId: F:FluentModbus.ModbusFunctionCode.ReadFileRecord
  fullName: FluentModbus.ModbusFunctionCode.ReadFileRecord
  nameWithType: ModbusFunctionCode.ReadFileRecord
- uid: FluentModbus.ModbusFunctionCode.ReadHoldingRegisters
  name: ReadHoldingRegisters
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadHoldingRegisters
  commentId: F:FluentModbus.ModbusFunctionCode.ReadHoldingRegisters
  fullName: FluentModbus.ModbusFunctionCode.ReadHoldingRegisters
  nameWithType: ModbusFunctionCode.ReadHoldingRegisters
- uid: FluentModbus.ModbusFunctionCode.ReadInputRegisters
  name: ReadInputRegisters
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadInputRegisters
  commentId: F:FluentModbus.ModbusFunctionCode.ReadInputRegisters
  fullName: FluentModbus.ModbusFunctionCode.ReadInputRegisters
  nameWithType: ModbusFunctionCode.ReadInputRegisters
- uid: FluentModbus.ModbusFunctionCode.ReadWriteMultipleRegisters
  name: ReadWriteMultipleRegisters
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_ReadWriteMultipleRegisters
  commentId: F:FluentModbus.ModbusFunctionCode.ReadWriteMultipleRegisters
  fullName: FluentModbus.ModbusFunctionCode.ReadWriteMultipleRegisters
  nameWithType: ModbusFunctionCode.ReadWriteMultipleRegisters
- uid: FluentModbus.ModbusFunctionCode.WriteFileRecord
  name: WriteFileRecord
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_WriteFileRecord
  commentId: F:FluentModbus.ModbusFunctionCode.WriteFileRecord
  fullName: FluentModbus.ModbusFunctionCode.WriteFileRecord
  nameWithType: ModbusFunctionCode.WriteFileRecord
- uid: FluentModbus.ModbusFunctionCode.WriteMultipleCoils
  name: WriteMultipleCoils
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_WriteMultipleCoils
  commentId: F:FluentModbus.ModbusFunctionCode.WriteMultipleCoils
  fullName: FluentModbus.ModbusFunctionCode.WriteMultipleCoils
  nameWithType: ModbusFunctionCode.WriteMultipleCoils
- uid: FluentModbus.ModbusFunctionCode.WriteMultipleRegisters
  name: WriteMultipleRegisters
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_WriteMultipleRegisters
  commentId: F:FluentModbus.ModbusFunctionCode.WriteMultipleRegisters
  fullName: FluentModbus.ModbusFunctionCode.WriteMultipleRegisters
  nameWithType: ModbusFunctionCode.WriteMultipleRegisters
- uid: FluentModbus.ModbusFunctionCode.WriteSingleCoil
  name: WriteSingleCoil
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_WriteSingleCoil
  commentId: F:FluentModbus.ModbusFunctionCode.WriteSingleCoil
  fullName: FluentModbus.ModbusFunctionCode.WriteSingleCoil
  nameWithType: ModbusFunctionCode.WriteSingleCoil
- uid: FluentModbus.ModbusFunctionCode.WriteSingleRegister
  name: WriteSingleRegister
  href: api/FluentModbus.ModbusFunctionCode.html#FluentModbus_ModbusFunctionCode_WriteSingleRegister
  commentId: F:FluentModbus.ModbusFunctionCode.WriteSingleRegister
  fullName: FluentModbus.ModbusFunctionCode.WriteSingleRegister
  nameWithType: ModbusFunctionCode.WriteSingleRegister
- uid: FluentModbus.ModbusRtuClient
  name: ModbusRtuClient
  href: api/FluentModbus.ModbusRtuClient.html
  commentId: T:FluentModbus.ModbusRtuClient
  fullName: FluentModbus.ModbusRtuClient
  nameWithType: ModbusRtuClient
- uid: FluentModbus.ModbusRtuClient.#ctor
  name: ModbusRtuClient()
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient__ctor
  commentId: M:FluentModbus.ModbusRtuClient.#ctor
  name.vb: New()
  fullName: FluentModbus.ModbusRtuClient.ModbusRtuClient()
  fullName.vb: FluentModbus.ModbusRtuClient.New()
  nameWithType: ModbusRtuClient.ModbusRtuClient()
  nameWithType.vb: ModbusRtuClient.New()
- uid: FluentModbus.ModbusRtuClient.#ctor*
  name: ModbusRtuClient
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient__ctor_
  commentId: Overload:FluentModbus.ModbusRtuClient.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ModbusRtuClient.ModbusRtuClient
  fullName.vb: FluentModbus.ModbusRtuClient.New
  nameWithType: ModbusRtuClient.ModbusRtuClient
  nameWithType.vb: ModbusRtuClient.New
- uid: FluentModbus.ModbusRtuClient.BaudRate
  name: BaudRate
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_BaudRate
  commentId: P:FluentModbus.ModbusRtuClient.BaudRate
  fullName: FluentModbus.ModbusRtuClient.BaudRate
  nameWithType: ModbusRtuClient.BaudRate
- uid: FluentModbus.ModbusRtuClient.BaudRate*
  name: BaudRate
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_BaudRate_
  commentId: Overload:FluentModbus.ModbusRtuClient.BaudRate
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.BaudRate
  nameWithType: ModbusRtuClient.BaudRate
- uid: FluentModbus.ModbusRtuClient.Close
  name: Close()
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Close
  commentId: M:FluentModbus.ModbusRtuClient.Close
  fullName: FluentModbus.ModbusRtuClient.Close()
  nameWithType: ModbusRtuClient.Close()
- uid: FluentModbus.ModbusRtuClient.Close*
  name: Close
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Close_
  commentId: Overload:FluentModbus.ModbusRtuClient.Close
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.Close
  nameWithType: ModbusRtuClient.Close
- uid: FluentModbus.ModbusRtuClient.Connect(System.String)
  name: Connect(string)
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Connect_System_String_
  commentId: M:FluentModbus.ModbusRtuClient.Connect(System.String)
  name.vb: Connect(String)
  fullName: FluentModbus.ModbusRtuClient.Connect(string)
  fullName.vb: FluentModbus.ModbusRtuClient.Connect(String)
  nameWithType: ModbusRtuClient.Connect(string)
  nameWithType.vb: ModbusRtuClient.Connect(String)
- uid: FluentModbus.ModbusRtuClient.Connect(System.String,FluentModbus.ModbusEndianness)
  name: Connect(string, ModbusEndianness)
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Connect_System_String_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusRtuClient.Connect(System.String,FluentModbus.ModbusEndianness)
  name.vb: Connect(String, ModbusEndianness)
  fullName: FluentModbus.ModbusRtuClient.Connect(string, FluentModbus.ModbusEndianness)
  fullName.vb: FluentModbus.ModbusRtuClient.Connect(String, FluentModbus.ModbusEndianness)
  nameWithType: ModbusRtuClient.Connect(string, ModbusEndianness)
  nameWithType.vb: ModbusRtuClient.Connect(String, ModbusEndianness)
- uid: FluentModbus.ModbusRtuClient.Connect*
  name: Connect
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Connect_
  commentId: Overload:FluentModbus.ModbusRtuClient.Connect
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.Connect
  nameWithType: ModbusRtuClient.Connect
- uid: FluentModbus.ModbusRtuClient.Dispose
  name: Dispose()
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Dispose
  commentId: M:FluentModbus.ModbusRtuClient.Dispose
  fullName: FluentModbus.ModbusRtuClient.Dispose()
  nameWithType: ModbusRtuClient.Dispose()
- uid: FluentModbus.ModbusRtuClient.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Dispose_System_Boolean_
  commentId: M:FluentModbus.ModbusRtuClient.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: FluentModbus.ModbusRtuClient.Dispose(bool)
  fullName.vb: FluentModbus.ModbusRtuClient.Dispose(Boolean)
  nameWithType: ModbusRtuClient.Dispose(bool)
  nameWithType.vb: ModbusRtuClient.Dispose(Boolean)
- uid: FluentModbus.ModbusRtuClient.Dispose*
  name: Dispose
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Dispose_
  commentId: Overload:FluentModbus.ModbusRtuClient.Dispose
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.Dispose
  nameWithType: ModbusRtuClient.Dispose
- uid: FluentModbus.ModbusRtuClient.Handshake
  name: Handshake
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Handshake
  commentId: P:FluentModbus.ModbusRtuClient.Handshake
  fullName: FluentModbus.ModbusRtuClient.Handshake
  nameWithType: ModbusRtuClient.Handshake
- uid: FluentModbus.ModbusRtuClient.Handshake*
  name: Handshake
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Handshake_
  commentId: Overload:FluentModbus.ModbusRtuClient.Handshake
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.Handshake
  nameWithType: ModbusRtuClient.Handshake
- uid: FluentModbus.ModbusRtuClient.Initialize(FluentModbus.IModbusRtuSerialPort,FluentModbus.ModbusEndianness)
  name: Initialize(IModbusRtuSerialPort, ModbusEndianness)
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Initialize_FluentModbus_IModbusRtuSerialPort_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusRtuClient.Initialize(FluentModbus.IModbusRtuSerialPort,FluentModbus.ModbusEndianness)
  fullName: FluentModbus.ModbusRtuClient.Initialize(FluentModbus.IModbusRtuSerialPort, FluentModbus.ModbusEndianness)
  nameWithType: ModbusRtuClient.Initialize(IModbusRtuSerialPort, ModbusEndianness)
- uid: FluentModbus.ModbusRtuClient.Initialize*
  name: Initialize
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Initialize_
  commentId: Overload:FluentModbus.ModbusRtuClient.Initialize
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.Initialize
  nameWithType: ModbusRtuClient.Initialize
- uid: FluentModbus.ModbusRtuClient.IsConnected
  name: IsConnected
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_IsConnected
  commentId: P:FluentModbus.ModbusRtuClient.IsConnected
  fullName: FluentModbus.ModbusRtuClient.IsConnected
  nameWithType: ModbusRtuClient.IsConnected
- uid: FluentModbus.ModbusRtuClient.IsConnected*
  name: IsConnected
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_IsConnected_
  commentId: Overload:FluentModbus.ModbusRtuClient.IsConnected
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.IsConnected
  nameWithType: ModbusRtuClient.IsConnected
- uid: FluentModbus.ModbusRtuClient.Parity
  name: Parity
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Parity
  commentId: P:FluentModbus.ModbusRtuClient.Parity
  fullName: FluentModbus.ModbusRtuClient.Parity
  nameWithType: ModbusRtuClient.Parity
- uid: FluentModbus.ModbusRtuClient.Parity*
  name: Parity
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_Parity_
  commentId: Overload:FluentModbus.ModbusRtuClient.Parity
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.Parity
  nameWithType: ModbusRtuClient.Parity
- uid: FluentModbus.ModbusRtuClient.ReadTimeout
  name: ReadTimeout
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_ReadTimeout
  commentId: P:FluentModbus.ModbusRtuClient.ReadTimeout
  fullName: FluentModbus.ModbusRtuClient.ReadTimeout
  nameWithType: ModbusRtuClient.ReadTimeout
- uid: FluentModbus.ModbusRtuClient.ReadTimeout*
  name: ReadTimeout
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_ReadTimeout_
  commentId: Overload:FluentModbus.ModbusRtuClient.ReadTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.ReadTimeout
  nameWithType: ModbusRtuClient.ReadTimeout
- uid: FluentModbus.ModbusRtuClient.StopBits
  name: StopBits
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_StopBits
  commentId: P:FluentModbus.ModbusRtuClient.StopBits
  fullName: FluentModbus.ModbusRtuClient.StopBits
  nameWithType: ModbusRtuClient.StopBits
- uid: FluentModbus.ModbusRtuClient.StopBits*
  name: StopBits
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_StopBits_
  commentId: Overload:FluentModbus.ModbusRtuClient.StopBits
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.StopBits
  nameWithType: ModbusRtuClient.StopBits
- uid: FluentModbus.ModbusRtuClient.TransceiveFrame(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter})
  name: TransceiveFrame(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>)
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_TransceiveFrame_System_Byte_FluentModbus_ModbusFunctionCode_System_Action_FluentModbus_ExtendedBinaryWriter__
  commentId: M:FluentModbus.ModbusRtuClient.TransceiveFrame(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter})
  name.vb: TransceiveFrame(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter))
  fullName: FluentModbus.ModbusRtuClient.TransceiveFrame(byte, FluentModbus.ModbusFunctionCode, System.Action<FluentModbus.ExtendedBinaryWriter>)
  fullName.vb: FluentModbus.ModbusRtuClient.TransceiveFrame(Byte, FluentModbus.ModbusFunctionCode, System.Action(Of FluentModbus.ExtendedBinaryWriter))
  nameWithType: ModbusRtuClient.TransceiveFrame(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>)
  nameWithType.vb: ModbusRtuClient.TransceiveFrame(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter))
- uid: FluentModbus.ModbusRtuClient.TransceiveFrame*
  name: TransceiveFrame
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_TransceiveFrame_
  commentId: Overload:FluentModbus.ModbusRtuClient.TransceiveFrame
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.TransceiveFrame
  nameWithType: ModbusRtuClient.TransceiveFrame
- uid: FluentModbus.ModbusRtuClient.TransceiveFrameAsync(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter},System.Threading.CancellationToken)
  name: TransceiveFrameAsync(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>, CancellationToken)
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_TransceiveFrameAsync_System_Byte_FluentModbus_ModbusFunctionCode_System_Action_FluentModbus_ExtendedBinaryWriter__System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusRtuClient.TransceiveFrameAsync(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter},System.Threading.CancellationToken)
  name.vb: TransceiveFrameAsync(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter), CancellationToken)
  fullName: FluentModbus.ModbusRtuClient.TransceiveFrameAsync(byte, FluentModbus.ModbusFunctionCode, System.Action<FluentModbus.ExtendedBinaryWriter>, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusRtuClient.TransceiveFrameAsync(Byte, FluentModbus.ModbusFunctionCode, System.Action(Of FluentModbus.ExtendedBinaryWriter), System.Threading.CancellationToken)
  nameWithType: ModbusRtuClient.TransceiveFrameAsync(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>, CancellationToken)
  nameWithType.vb: ModbusRtuClient.TransceiveFrameAsync(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter), CancellationToken)
- uid: FluentModbus.ModbusRtuClient.TransceiveFrameAsync*
  name: TransceiveFrameAsync
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_TransceiveFrameAsync_
  commentId: Overload:FluentModbus.ModbusRtuClient.TransceiveFrameAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.TransceiveFrameAsync
  nameWithType: ModbusRtuClient.TransceiveFrameAsync
- uid: FluentModbus.ModbusRtuClient.WriteTimeout
  name: WriteTimeout
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_WriteTimeout
  commentId: P:FluentModbus.ModbusRtuClient.WriteTimeout
  fullName: FluentModbus.ModbusRtuClient.WriteTimeout
  nameWithType: ModbusRtuClient.WriteTimeout
- uid: FluentModbus.ModbusRtuClient.WriteTimeout*
  name: WriteTimeout
  href: api/FluentModbus.ModbusRtuClient.html#FluentModbus_ModbusRtuClient_WriteTimeout_
  commentId: Overload:FluentModbus.ModbusRtuClient.WriteTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuClient.WriteTimeout
  nameWithType: ModbusRtuClient.WriteTimeout
- uid: FluentModbus.ModbusRtuSerialPort
  name: ModbusRtuSerialPort
  href: api/FluentModbus.ModbusRtuSerialPort.html
  commentId: T:FluentModbus.ModbusRtuSerialPort
  fullName: FluentModbus.ModbusRtuSerialPort
  nameWithType: ModbusRtuSerialPort
- uid: FluentModbus.ModbusRtuSerialPort.#ctor(System.IO.Ports.SerialPort)
  name: ModbusRtuSerialPort(SerialPort)
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort__ctor_System_IO_Ports_SerialPort_
  commentId: M:FluentModbus.ModbusRtuSerialPort.#ctor(System.IO.Ports.SerialPort)
  name.vb: New(SerialPort)
  fullName: FluentModbus.ModbusRtuSerialPort.ModbusRtuSerialPort(System.IO.Ports.SerialPort)
  fullName.vb: FluentModbus.ModbusRtuSerialPort.New(System.IO.Ports.SerialPort)
  nameWithType: ModbusRtuSerialPort.ModbusRtuSerialPort(SerialPort)
  nameWithType.vb: ModbusRtuSerialPort.New(SerialPort)
- uid: FluentModbus.ModbusRtuSerialPort.#ctor*
  name: ModbusRtuSerialPort
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort__ctor_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ModbusRtuSerialPort.ModbusRtuSerialPort
  fullName.vb: FluentModbus.ModbusRtuSerialPort.New
  nameWithType: ModbusRtuSerialPort.ModbusRtuSerialPort
  nameWithType.vb: ModbusRtuSerialPort.New
- uid: FluentModbus.ModbusRtuSerialPort.Close
  name: Close()
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Close
  commentId: M:FluentModbus.ModbusRtuSerialPort.Close
  fullName: FluentModbus.ModbusRtuSerialPort.Close()
  nameWithType: ModbusRtuSerialPort.Close()
- uid: FluentModbus.ModbusRtuSerialPort.Close*
  name: Close
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Close_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.Close
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.Close
  nameWithType: ModbusRtuSerialPort.Close
- uid: FluentModbus.ModbusRtuSerialPort.IsOpen
  name: IsOpen
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_IsOpen
  commentId: P:FluentModbus.ModbusRtuSerialPort.IsOpen
  fullName: FluentModbus.ModbusRtuSerialPort.IsOpen
  nameWithType: ModbusRtuSerialPort.IsOpen
- uid: FluentModbus.ModbusRtuSerialPort.IsOpen*
  name: IsOpen
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_IsOpen_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.IsOpen
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.IsOpen
  nameWithType: ModbusRtuSerialPort.IsOpen
- uid: FluentModbus.ModbusRtuSerialPort.Open
  name: Open()
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Open
  commentId: M:FluentModbus.ModbusRtuSerialPort.Open
  fullName: FluentModbus.ModbusRtuSerialPort.Open()
  nameWithType: ModbusRtuSerialPort.Open()
- uid: FluentModbus.ModbusRtuSerialPort.Open*
  name: Open
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Open_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.Open
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.Open
  nameWithType: ModbusRtuSerialPort.Open
- uid: FluentModbus.ModbusRtuSerialPort.PortName
  name: PortName
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_PortName
  commentId: P:FluentModbus.ModbusRtuSerialPort.PortName
  fullName: FluentModbus.ModbusRtuSerialPort.PortName
  nameWithType: ModbusRtuSerialPort.PortName
- uid: FluentModbus.ModbusRtuSerialPort.PortName*
  name: PortName
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_PortName_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.PortName
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.PortName
  nameWithType: ModbusRtuSerialPort.PortName
- uid: FluentModbus.ModbusRtuSerialPort.Read(System.Byte[],System.Int32,System.Int32)
  name: Read(byte[], int, int)
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Read_System_Byte___System_Int32_System_Int32_
  commentId: M:FluentModbus.ModbusRtuSerialPort.Read(System.Byte[],System.Int32,System.Int32)
  name.vb: Read(Byte(), Integer, Integer)
  fullName: FluentModbus.ModbusRtuSerialPort.Read(byte[], int, int)
  fullName.vb: FluentModbus.ModbusRtuSerialPort.Read(Byte(), Integer, Integer)
  nameWithType: ModbusRtuSerialPort.Read(byte[], int, int)
  nameWithType.vb: ModbusRtuSerialPort.Read(Byte(), Integer, Integer)
- uid: FluentModbus.ModbusRtuSerialPort.Read*
  name: Read
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Read_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.Read
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.Read
  nameWithType: ModbusRtuSerialPort.Read
- uid: FluentModbus.ModbusRtuSerialPort.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadAsync(byte[], int, int, CancellationToken)
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusRtuSerialPort.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Integer, Integer, CancellationToken)
  fullName: FluentModbus.ModbusRtuSerialPort.ReadAsync(byte[], int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusRtuSerialPort.ReadAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  nameWithType: ModbusRtuSerialPort.ReadAsync(byte[], int, int, CancellationToken)
  nameWithType.vb: ModbusRtuSerialPort.ReadAsync(Byte(), Integer, Integer, CancellationToken)
- uid: FluentModbus.ModbusRtuSerialPort.ReadAsync*
  name: ReadAsync
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_ReadAsync_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.ReadAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.ReadAsync
  nameWithType: ModbusRtuSerialPort.ReadAsync
- uid: FluentModbus.ModbusRtuSerialPort.Write(System.Byte[],System.Int32,System.Int32)
  name: Write(byte[], int, int)
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Write_System_Byte___System_Int32_System_Int32_
  commentId: M:FluentModbus.ModbusRtuSerialPort.Write(System.Byte[],System.Int32,System.Int32)
  name.vb: Write(Byte(), Integer, Integer)
  fullName: FluentModbus.ModbusRtuSerialPort.Write(byte[], int, int)
  fullName.vb: FluentModbus.ModbusRtuSerialPort.Write(Byte(), Integer, Integer)
  nameWithType: ModbusRtuSerialPort.Write(byte[], int, int)
  nameWithType.vb: ModbusRtuSerialPort.Write(Byte(), Integer, Integer)
- uid: FluentModbus.ModbusRtuSerialPort.Write*
  name: Write
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_Write_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.Write
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.Write
  nameWithType: ModbusRtuSerialPort.Write
- uid: FluentModbus.ModbusRtuSerialPort.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: WriteAsync(byte[], int, int, CancellationToken)
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusRtuSerialPort.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Integer, Integer, CancellationToken)
  fullName: FluentModbus.ModbusRtuSerialPort.WriteAsync(byte[], int, int, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusRtuSerialPort.WriteAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  nameWithType: ModbusRtuSerialPort.WriteAsync(byte[], int, int, CancellationToken)
  nameWithType.vb: ModbusRtuSerialPort.WriteAsync(Byte(), Integer, Integer, CancellationToken)
- uid: FluentModbus.ModbusRtuSerialPort.WriteAsync*
  name: WriteAsync
  href: api/FluentModbus.ModbusRtuSerialPort.html#FluentModbus_ModbusRtuSerialPort_WriteAsync_
  commentId: Overload:FluentModbus.ModbusRtuSerialPort.WriteAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuSerialPort.WriteAsync
  nameWithType: ModbusRtuSerialPort.WriteAsync
- uid: FluentModbus.ModbusRtuServer
  name: ModbusRtuServer
  href: api/FluentModbus.ModbusRtuServer.html
  commentId: T:FluentModbus.ModbusRtuServer
  fullName: FluentModbus.ModbusRtuServer
  nameWithType: ModbusRtuServer
- uid: FluentModbus.ModbusRtuServer.#ctor(System.Byte)
  name: ModbusRtuServer(byte)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer__ctor_System_Byte_
  commentId: M:FluentModbus.ModbusRtuServer.#ctor(System.Byte)
  name.vb: New(Byte)
  fullName: FluentModbus.ModbusRtuServer.ModbusRtuServer(byte)
  fullName.vb: FluentModbus.ModbusRtuServer.New(Byte)
  nameWithType: ModbusRtuServer.ModbusRtuServer(byte)
  nameWithType.vb: ModbusRtuServer.New(Byte)
- uid: FluentModbus.ModbusRtuServer.#ctor(System.Byte,System.Boolean)
  name: ModbusRtuServer(byte, bool)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer__ctor_System_Byte_System_Boolean_
  commentId: M:FluentModbus.ModbusRtuServer.#ctor(System.Byte,System.Boolean)
  name.vb: New(Byte, Boolean)
  fullName: FluentModbus.ModbusRtuServer.ModbusRtuServer(byte, bool)
  fullName.vb: FluentModbus.ModbusRtuServer.New(Byte, Boolean)
  nameWithType: ModbusRtuServer.ModbusRtuServer(byte, bool)
  nameWithType.vb: ModbusRtuServer.New(Byte, Boolean)
- uid: FluentModbus.ModbusRtuServer.#ctor(System.Collections.Generic.IEnumerable{System.Byte})
  name: ModbusRtuServer(IEnumerable<byte>)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer__ctor_System_Collections_Generic_IEnumerable_System_Byte__
  commentId: M:FluentModbus.ModbusRtuServer.#ctor(System.Collections.Generic.IEnumerable{System.Byte})
  name.vb: New(IEnumerable(Of Byte))
  fullName: FluentModbus.ModbusRtuServer.ModbusRtuServer(System.Collections.Generic.IEnumerable<byte>)
  fullName.vb: FluentModbus.ModbusRtuServer.New(System.Collections.Generic.IEnumerable(Of Byte))
  nameWithType: ModbusRtuServer.ModbusRtuServer(IEnumerable<byte>)
  nameWithType.vb: ModbusRtuServer.New(IEnumerable(Of Byte))
- uid: FluentModbus.ModbusRtuServer.#ctor(System.Collections.Generic.IEnumerable{System.Byte},System.Boolean)
  name: ModbusRtuServer(IEnumerable<byte>, bool)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer__ctor_System_Collections_Generic_IEnumerable_System_Byte__System_Boolean_
  commentId: M:FluentModbus.ModbusRtuServer.#ctor(System.Collections.Generic.IEnumerable{System.Byte},System.Boolean)
  name.vb: New(IEnumerable(Of Byte), Boolean)
  fullName: FluentModbus.ModbusRtuServer.ModbusRtuServer(System.Collections.Generic.IEnumerable<byte>, bool)
  fullName.vb: FluentModbus.ModbusRtuServer.New(System.Collections.Generic.IEnumerable(Of Byte), Boolean)
  nameWithType: ModbusRtuServer.ModbusRtuServer(IEnumerable<byte>, bool)
  nameWithType.vb: ModbusRtuServer.New(IEnumerable(Of Byte), Boolean)
- uid: FluentModbus.ModbusRtuServer.#ctor*
  name: ModbusRtuServer
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer__ctor_
  commentId: Overload:FluentModbus.ModbusRtuServer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ModbusRtuServer.ModbusRtuServer
  fullName.vb: FluentModbus.ModbusRtuServer.New
  nameWithType: ModbusRtuServer.ModbusRtuServer
  nameWithType.vb: ModbusRtuServer.New
- uid: FluentModbus.ModbusRtuServer.AddUnit(System.Byte)
  name: AddUnit(byte)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_AddUnit_System_Byte_
  commentId: M:FluentModbus.ModbusRtuServer.AddUnit(System.Byte)
  name.vb: AddUnit(Byte)
  fullName: FluentModbus.ModbusRtuServer.AddUnit(byte)
  fullName.vb: FluentModbus.ModbusRtuServer.AddUnit(Byte)
  nameWithType: ModbusRtuServer.AddUnit(byte)
  nameWithType.vb: ModbusRtuServer.AddUnit(Byte)
- uid: FluentModbus.ModbusRtuServer.AddUnit*
  name: AddUnit
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_AddUnit_
  commentId: Overload:FluentModbus.ModbusRtuServer.AddUnit
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.AddUnit
  nameWithType: ModbusRtuServer.AddUnit
- uid: FluentModbus.ModbusRtuServer.BaudRate
  name: BaudRate
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_BaudRate
  commentId: P:FluentModbus.ModbusRtuServer.BaudRate
  fullName: FluentModbus.ModbusRtuServer.BaudRate
  nameWithType: ModbusRtuServer.BaudRate
- uid: FluentModbus.ModbusRtuServer.BaudRate*
  name: BaudRate
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_BaudRate_
  commentId: Overload:FluentModbus.ModbusRtuServer.BaudRate
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.BaudRate
  nameWithType: ModbusRtuServer.BaudRate
- uid: FluentModbus.ModbusRtuServer.Handshake
  name: Handshake
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Handshake
  commentId: P:FluentModbus.ModbusRtuServer.Handshake
  fullName: FluentModbus.ModbusRtuServer.Handshake
  nameWithType: ModbusRtuServer.Handshake
- uid: FluentModbus.ModbusRtuServer.Handshake*
  name: Handshake
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Handshake_
  commentId: Overload:FluentModbus.ModbusRtuServer.Handshake
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.Handshake
  nameWithType: ModbusRtuServer.Handshake
- uid: FluentModbus.ModbusRtuServer.IsConnected
  name: IsConnected
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_IsConnected
  commentId: P:FluentModbus.ModbusRtuServer.IsConnected
  fullName: FluentModbus.ModbusRtuServer.IsConnected
  nameWithType: ModbusRtuServer.IsConnected
- uid: FluentModbus.ModbusRtuServer.IsConnected*
  name: IsConnected
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_IsConnected_
  commentId: Overload:FluentModbus.ModbusRtuServer.IsConnected
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.IsConnected
  nameWithType: ModbusRtuServer.IsConnected
- uid: FluentModbus.ModbusRtuServer.Parity
  name: Parity
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Parity
  commentId: P:FluentModbus.ModbusRtuServer.Parity
  fullName: FluentModbus.ModbusRtuServer.Parity
  nameWithType: ModbusRtuServer.Parity
- uid: FluentModbus.ModbusRtuServer.Parity*
  name: Parity
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Parity_
  commentId: Overload:FluentModbus.ModbusRtuServer.Parity
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.Parity
  nameWithType: ModbusRtuServer.Parity
- uid: FluentModbus.ModbusRtuServer.ProcessRequests
  name: ProcessRequests()
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_ProcessRequests
  commentId: M:FluentModbus.ModbusRtuServer.ProcessRequests
  fullName: FluentModbus.ModbusRtuServer.ProcessRequests()
  nameWithType: ModbusRtuServer.ProcessRequests()
- uid: FluentModbus.ModbusRtuServer.ProcessRequests*
  name: ProcessRequests
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_ProcessRequests_
  commentId: Overload:FluentModbus.ModbusRtuServer.ProcessRequests
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.ProcessRequests
  nameWithType: ModbusRtuServer.ProcessRequests
- uid: FluentModbus.ModbusRtuServer.ReadTimeout
  name: ReadTimeout
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_ReadTimeout
  commentId: P:FluentModbus.ModbusRtuServer.ReadTimeout
  fullName: FluentModbus.ModbusRtuServer.ReadTimeout
  nameWithType: ModbusRtuServer.ReadTimeout
- uid: FluentModbus.ModbusRtuServer.ReadTimeout*
  name: ReadTimeout
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_ReadTimeout_
  commentId: Overload:FluentModbus.ModbusRtuServer.ReadTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.ReadTimeout
  nameWithType: ModbusRtuServer.ReadTimeout
- uid: FluentModbus.ModbusRtuServer.Start(FluentModbus.IModbusRtuSerialPort)
  name: Start(IModbusRtuSerialPort)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Start_FluentModbus_IModbusRtuSerialPort_
  commentId: M:FluentModbus.ModbusRtuServer.Start(FluentModbus.IModbusRtuSerialPort)
  fullName: FluentModbus.ModbusRtuServer.Start(FluentModbus.IModbusRtuSerialPort)
  nameWithType: ModbusRtuServer.Start(IModbusRtuSerialPort)
- uid: FluentModbus.ModbusRtuServer.Start(System.String)
  name: Start(string)
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Start_System_String_
  commentId: M:FluentModbus.ModbusRtuServer.Start(System.String)
  name.vb: Start(String)
  fullName: FluentModbus.ModbusRtuServer.Start(string)
  fullName.vb: FluentModbus.ModbusRtuServer.Start(String)
  nameWithType: ModbusRtuServer.Start(string)
  nameWithType.vb: ModbusRtuServer.Start(String)
- uid: FluentModbus.ModbusRtuServer.Start*
  name: Start
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Start_
  commentId: Overload:FluentModbus.ModbusRtuServer.Start
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.Start
  nameWithType: ModbusRtuServer.Start
- uid: FluentModbus.ModbusRtuServer.Stop
  name: Stop()
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Stop
  commentId: M:FluentModbus.ModbusRtuServer.Stop
  fullName: FluentModbus.ModbusRtuServer.Stop()
  nameWithType: ModbusRtuServer.Stop()
- uid: FluentModbus.ModbusRtuServer.Stop*
  name: Stop
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_Stop_
  commentId: Overload:FluentModbus.ModbusRtuServer.Stop
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.Stop
  nameWithType: ModbusRtuServer.Stop
- uid: FluentModbus.ModbusRtuServer.StopBits
  name: StopBits
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_StopBits
  commentId: P:FluentModbus.ModbusRtuServer.StopBits
  fullName: FluentModbus.ModbusRtuServer.StopBits
  nameWithType: ModbusRtuServer.StopBits
- uid: FluentModbus.ModbusRtuServer.StopBits*
  name: StopBits
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_StopBits_
  commentId: Overload:FluentModbus.ModbusRtuServer.StopBits
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.StopBits
  nameWithType: ModbusRtuServer.StopBits
- uid: FluentModbus.ModbusRtuServer.WriteTimeout
  name: WriteTimeout
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_WriteTimeout
  commentId: P:FluentModbus.ModbusRtuServer.WriteTimeout
  fullName: FluentModbus.ModbusRtuServer.WriteTimeout
  nameWithType: ModbusRtuServer.WriteTimeout
- uid: FluentModbus.ModbusRtuServer.WriteTimeout*
  name: WriteTimeout
  href: api/FluentModbus.ModbusRtuServer.html#FluentModbus_ModbusRtuServer_WriteTimeout_
  commentId: Overload:FluentModbus.ModbusRtuServer.WriteTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusRtuServer.WriteTimeout
  nameWithType: ModbusRtuServer.WriteTimeout
- uid: FluentModbus.ModbusServer
  name: ModbusServer
  href: api/FluentModbus.ModbusServer.html
  commentId: T:FluentModbus.ModbusServer
  fullName: FluentModbus.ModbusServer
  nameWithType: ModbusServer
- uid: FluentModbus.ModbusServer.#ctor(System.Boolean)
  name: ModbusServer(bool)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer__ctor_System_Boolean_
  commentId: M:FluentModbus.ModbusServer.#ctor(System.Boolean)
  name.vb: New(Boolean)
  fullName: FluentModbus.ModbusServer.ModbusServer(bool)
  fullName.vb: FluentModbus.ModbusServer.New(Boolean)
  nameWithType: ModbusServer.ModbusServer(bool)
  nameWithType.vb: ModbusServer.New(Boolean)
- uid: FluentModbus.ModbusServer.#ctor*
  name: ModbusServer
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer__ctor_
  commentId: Overload:FluentModbus.ModbusServer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ModbusServer.ModbusServer
  fullName.vb: FluentModbus.ModbusServer.New
  nameWithType: ModbusServer.ModbusServer
  nameWithType.vb: ModbusServer.New
- uid: FluentModbus.ModbusServer.AddUnit(System.Byte)
  name: AddUnit(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_AddUnit_System_Byte_
  commentId: M:FluentModbus.ModbusServer.AddUnit(System.Byte)
  name.vb: AddUnit(Byte)
  fullName: FluentModbus.ModbusServer.AddUnit(byte)
  fullName.vb: FluentModbus.ModbusServer.AddUnit(Byte)
  nameWithType: ModbusServer.AddUnit(byte)
  nameWithType.vb: ModbusServer.AddUnit(Byte)
- uid: FluentModbus.ModbusServer.AddUnit*
  name: AddUnit
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_AddUnit_
  commentId: Overload:FluentModbus.ModbusServer.AddUnit
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.AddUnit
  nameWithType: ModbusServer.AddUnit
- uid: FluentModbus.ModbusServer.AlwaysRaiseChangedEvent
  name: AlwaysRaiseChangedEvent
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_AlwaysRaiseChangedEvent
  commentId: P:FluentModbus.ModbusServer.AlwaysRaiseChangedEvent
  fullName: FluentModbus.ModbusServer.AlwaysRaiseChangedEvent
  nameWithType: ModbusServer.AlwaysRaiseChangedEvent
- uid: FluentModbus.ModbusServer.AlwaysRaiseChangedEvent*
  name: AlwaysRaiseChangedEvent
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_AlwaysRaiseChangedEvent_
  commentId: Overload:FluentModbus.ModbusServer.AlwaysRaiseChangedEvent
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.AlwaysRaiseChangedEvent
  nameWithType: ModbusServer.AlwaysRaiseChangedEvent
- uid: FluentModbus.ModbusServer.ClearBuffers(System.Byte)
  name: ClearBuffers(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_ClearBuffers_System_Byte_
  commentId: M:FluentModbus.ModbusServer.ClearBuffers(System.Byte)
  name.vb: ClearBuffers(Byte)
  fullName: FluentModbus.ModbusServer.ClearBuffers(byte)
  fullName.vb: FluentModbus.ModbusServer.ClearBuffers(Byte)
  nameWithType: ModbusServer.ClearBuffers(byte)
  nameWithType.vb: ModbusServer.ClearBuffers(Byte)
- uid: FluentModbus.ModbusServer.ClearBuffers*
  name: ClearBuffers
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_ClearBuffers_
  commentId: Overload:FluentModbus.ModbusServer.ClearBuffers
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.ClearBuffers
  nameWithType: ModbusServer.ClearBuffers
- uid: FluentModbus.ModbusServer.CoilsChanged
  name: CoilsChanged
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_CoilsChanged
  commentId: E:FluentModbus.ModbusServer.CoilsChanged
  fullName: FluentModbus.ModbusServer.CoilsChanged
  nameWithType: ModbusServer.CoilsChanged
- uid: FluentModbus.ModbusServer.Dispose
  name: Dispose()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Dispose
  commentId: M:FluentModbus.ModbusServer.Dispose
  fullName: FluentModbus.ModbusServer.Dispose()
  nameWithType: ModbusServer.Dispose()
- uid: FluentModbus.ModbusServer.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Dispose_System_Boolean_
  commentId: M:FluentModbus.ModbusServer.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: FluentModbus.ModbusServer.Dispose(bool)
  fullName.vb: FluentModbus.ModbusServer.Dispose(Boolean)
  nameWithType: ModbusServer.Dispose(bool)
  nameWithType.vb: ModbusServer.Dispose(Boolean)
- uid: FluentModbus.ModbusServer.Dispose*
  name: Dispose
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Dispose_
  commentId: Overload:FluentModbus.ModbusServer.Dispose
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.Dispose
  nameWithType: ModbusServer.Dispose
- uid: FluentModbus.ModbusServer.EnableRaisingEvents
  name: EnableRaisingEvents
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_EnableRaisingEvents
  commentId: P:FluentModbus.ModbusServer.EnableRaisingEvents
  fullName: FluentModbus.ModbusServer.EnableRaisingEvents
  nameWithType: ModbusServer.EnableRaisingEvents
- uid: FluentModbus.ModbusServer.EnableRaisingEvents*
  name: EnableRaisingEvents
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_EnableRaisingEvents_
  commentId: Overload:FluentModbus.ModbusServer.EnableRaisingEvents
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.EnableRaisingEvents
  nameWithType: ModbusServer.EnableRaisingEvents
- uid: FluentModbus.ModbusServer.Finalize
  name: ~ModbusServer()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Finalize
  commentId: M:FluentModbus.ModbusServer.Finalize
  name.vb: ''
  fullName: FluentModbus.ModbusServer.~ModbusServer()
  fullName.vb: ''
  nameWithType: ModbusServer.~ModbusServer()
  nameWithType.vb: ''
- uid: FluentModbus.ModbusServer.Finalize*
  name: ~ModbusServer
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Finalize_
  commentId: Overload:FluentModbus.ModbusServer.Finalize
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.~ModbusServer
  nameWithType: ModbusServer.~ModbusServer
- uid: FluentModbus.ModbusServer.GetCoilBuffer(System.Byte)
  name: GetCoilBuffer(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetCoilBuffer_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetCoilBuffer(System.Byte)
  name.vb: GetCoilBuffer(Byte)
  fullName: FluentModbus.ModbusServer.GetCoilBuffer(byte)
  fullName.vb: FluentModbus.ModbusServer.GetCoilBuffer(Byte)
  nameWithType: ModbusServer.GetCoilBuffer(byte)
  nameWithType.vb: ModbusServer.GetCoilBuffer(Byte)
- uid: FluentModbus.ModbusServer.GetCoilBuffer*
  name: GetCoilBuffer
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetCoilBuffer_
  commentId: Overload:FluentModbus.ModbusServer.GetCoilBuffer
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetCoilBuffer
  nameWithType: ModbusServer.GetCoilBuffer
- uid: FluentModbus.ModbusServer.GetCoilBuffer``1(System.Byte)
  name: GetCoilBuffer<T>(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetCoilBuffer__1_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetCoilBuffer``1(System.Byte)
  name.vb: GetCoilBuffer(Of T)(Byte)
  fullName: FluentModbus.ModbusServer.GetCoilBuffer<T>(byte)
  fullName.vb: FluentModbus.ModbusServer.GetCoilBuffer(Of T)(Byte)
  nameWithType: ModbusServer.GetCoilBuffer<T>(byte)
  nameWithType.vb: ModbusServer.GetCoilBuffer(Of T)(Byte)
- uid: FluentModbus.ModbusServer.GetCoils(System.Byte)
  name: GetCoils(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetCoils_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetCoils(System.Byte)
  name.vb: GetCoils(Byte)
  fullName: FluentModbus.ModbusServer.GetCoils(byte)
  fullName.vb: FluentModbus.ModbusServer.GetCoils(Byte)
  nameWithType: ModbusServer.GetCoils(byte)
  nameWithType.vb: ModbusServer.GetCoils(Byte)
- uid: FluentModbus.ModbusServer.GetCoils*
  name: GetCoils
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetCoils_
  commentId: Overload:FluentModbus.ModbusServer.GetCoils
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetCoils
  nameWithType: ModbusServer.GetCoils
- uid: FluentModbus.ModbusServer.GetDiscreteInputBuffer(System.Byte)
  name: GetDiscreteInputBuffer(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetDiscreteInputBuffer_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetDiscreteInputBuffer(System.Byte)
  name.vb: GetDiscreteInputBuffer(Byte)
  fullName: FluentModbus.ModbusServer.GetDiscreteInputBuffer(byte)
  fullName.vb: FluentModbus.ModbusServer.GetDiscreteInputBuffer(Byte)
  nameWithType: ModbusServer.GetDiscreteInputBuffer(byte)
  nameWithType.vb: ModbusServer.GetDiscreteInputBuffer(Byte)
- uid: FluentModbus.ModbusServer.GetDiscreteInputBuffer*
  name: GetDiscreteInputBuffer
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetDiscreteInputBuffer_
  commentId: Overload:FluentModbus.ModbusServer.GetDiscreteInputBuffer
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetDiscreteInputBuffer
  nameWithType: ModbusServer.GetDiscreteInputBuffer
- uid: FluentModbus.ModbusServer.GetDiscreteInputBuffer``1(System.Byte)
  name: GetDiscreteInputBuffer<T>(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetDiscreteInputBuffer__1_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetDiscreteInputBuffer``1(System.Byte)
  name.vb: GetDiscreteInputBuffer(Of T)(Byte)
  fullName: FluentModbus.ModbusServer.GetDiscreteInputBuffer<T>(byte)
  fullName.vb: FluentModbus.ModbusServer.GetDiscreteInputBuffer(Of T)(Byte)
  nameWithType: ModbusServer.GetDiscreteInputBuffer<T>(byte)
  nameWithType.vb: ModbusServer.GetDiscreteInputBuffer(Of T)(Byte)
- uid: FluentModbus.ModbusServer.GetDiscreteInputs(System.Byte)
  name: GetDiscreteInputs(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetDiscreteInputs_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetDiscreteInputs(System.Byte)
  name.vb: GetDiscreteInputs(Byte)
  fullName: FluentModbus.ModbusServer.GetDiscreteInputs(byte)
  fullName.vb: FluentModbus.ModbusServer.GetDiscreteInputs(Byte)
  nameWithType: ModbusServer.GetDiscreteInputs(byte)
  nameWithType.vb: ModbusServer.GetDiscreteInputs(Byte)
- uid: FluentModbus.ModbusServer.GetDiscreteInputs*
  name: GetDiscreteInputs
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetDiscreteInputs_
  commentId: Overload:FluentModbus.ModbusServer.GetDiscreteInputs
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetDiscreteInputs
  nameWithType: ModbusServer.GetDiscreteInputs
- uid: FluentModbus.ModbusServer.GetHoldingRegisterBuffer(System.Byte)
  name: GetHoldingRegisterBuffer(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetHoldingRegisterBuffer_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetHoldingRegisterBuffer(System.Byte)
  name.vb: GetHoldingRegisterBuffer(Byte)
  fullName: FluentModbus.ModbusServer.GetHoldingRegisterBuffer(byte)
  fullName.vb: FluentModbus.ModbusServer.GetHoldingRegisterBuffer(Byte)
  nameWithType: ModbusServer.GetHoldingRegisterBuffer(byte)
  nameWithType.vb: ModbusServer.GetHoldingRegisterBuffer(Byte)
- uid: FluentModbus.ModbusServer.GetHoldingRegisterBuffer*
  name: GetHoldingRegisterBuffer
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetHoldingRegisterBuffer_
  commentId: Overload:FluentModbus.ModbusServer.GetHoldingRegisterBuffer
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetHoldingRegisterBuffer
  nameWithType: ModbusServer.GetHoldingRegisterBuffer
- uid: FluentModbus.ModbusServer.GetHoldingRegisterBuffer``1(System.Byte)
  name: GetHoldingRegisterBuffer<T>(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetHoldingRegisterBuffer__1_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetHoldingRegisterBuffer``1(System.Byte)
  name.vb: GetHoldingRegisterBuffer(Of T)(Byte)
  fullName: FluentModbus.ModbusServer.GetHoldingRegisterBuffer<T>(byte)
  fullName.vb: FluentModbus.ModbusServer.GetHoldingRegisterBuffer(Of T)(Byte)
  nameWithType: ModbusServer.GetHoldingRegisterBuffer<T>(byte)
  nameWithType.vb: ModbusServer.GetHoldingRegisterBuffer(Of T)(Byte)
- uid: FluentModbus.ModbusServer.GetHoldingRegisters(System.Byte)
  name: GetHoldingRegisters(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetHoldingRegisters_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetHoldingRegisters(System.Byte)
  name.vb: GetHoldingRegisters(Byte)
  fullName: FluentModbus.ModbusServer.GetHoldingRegisters(byte)
  fullName.vb: FluentModbus.ModbusServer.GetHoldingRegisters(Byte)
  nameWithType: ModbusServer.GetHoldingRegisters(byte)
  nameWithType.vb: ModbusServer.GetHoldingRegisters(Byte)
- uid: FluentModbus.ModbusServer.GetHoldingRegisters*
  name: GetHoldingRegisters
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetHoldingRegisters_
  commentId: Overload:FluentModbus.ModbusServer.GetHoldingRegisters
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetHoldingRegisters
  nameWithType: ModbusServer.GetHoldingRegisters
- uid: FluentModbus.ModbusServer.GetInputRegisterBuffer(System.Byte)
  name: GetInputRegisterBuffer(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetInputRegisterBuffer_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetInputRegisterBuffer(System.Byte)
  name.vb: GetInputRegisterBuffer(Byte)
  fullName: FluentModbus.ModbusServer.GetInputRegisterBuffer(byte)
  fullName.vb: FluentModbus.ModbusServer.GetInputRegisterBuffer(Byte)
  nameWithType: ModbusServer.GetInputRegisterBuffer(byte)
  nameWithType.vb: ModbusServer.GetInputRegisterBuffer(Byte)
- uid: FluentModbus.ModbusServer.GetInputRegisterBuffer*
  name: GetInputRegisterBuffer
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetInputRegisterBuffer_
  commentId: Overload:FluentModbus.ModbusServer.GetInputRegisterBuffer
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetInputRegisterBuffer
  nameWithType: ModbusServer.GetInputRegisterBuffer
- uid: FluentModbus.ModbusServer.GetInputRegisterBuffer``1(System.Byte)
  name: GetInputRegisterBuffer<T>(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetInputRegisterBuffer__1_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetInputRegisterBuffer``1(System.Byte)
  name.vb: GetInputRegisterBuffer(Of T)(Byte)
  fullName: FluentModbus.ModbusServer.GetInputRegisterBuffer<T>(byte)
  fullName.vb: FluentModbus.ModbusServer.GetInputRegisterBuffer(Of T)(Byte)
  nameWithType: ModbusServer.GetInputRegisterBuffer<T>(byte)
  nameWithType.vb: ModbusServer.GetInputRegisterBuffer(Of T)(Byte)
- uid: FluentModbus.ModbusServer.GetInputRegisters(System.Byte)
  name: GetInputRegisters(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetInputRegisters_System_Byte_
  commentId: M:FluentModbus.ModbusServer.GetInputRegisters(System.Byte)
  name.vb: GetInputRegisters(Byte)
  fullName: FluentModbus.ModbusServer.GetInputRegisters(byte)
  fullName.vb: FluentModbus.ModbusServer.GetInputRegisters(Byte)
  nameWithType: ModbusServer.GetInputRegisters(byte)
  nameWithType.vb: ModbusServer.GetInputRegisters(Byte)
- uid: FluentModbus.ModbusServer.GetInputRegisters*
  name: GetInputRegisters
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_GetInputRegisters_
  commentId: Overload:FluentModbus.ModbusServer.GetInputRegisters
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.GetInputRegisters
  nameWithType: ModbusServer.GetInputRegisters
- uid: FluentModbus.ModbusServer.IsAsynchronous
  name: IsAsynchronous
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_IsAsynchronous
  commentId: P:FluentModbus.ModbusServer.IsAsynchronous
  fullName: FluentModbus.ModbusServer.IsAsynchronous
  nameWithType: ModbusServer.IsAsynchronous
- uid: FluentModbus.ModbusServer.IsAsynchronous*
  name: IsAsynchronous
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_IsAsynchronous_
  commentId: Overload:FluentModbus.ModbusServer.IsAsynchronous
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.IsAsynchronous
  nameWithType: ModbusServer.IsAsynchronous
- uid: FluentModbus.ModbusServer.Lock
  name: Lock
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Lock
  commentId: P:FluentModbus.ModbusServer.Lock
  fullName: FluentModbus.ModbusServer.Lock
  nameWithType: ModbusServer.Lock
- uid: FluentModbus.ModbusServer.Lock*
  name: Lock
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Lock_
  commentId: Overload:FluentModbus.ModbusServer.Lock
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.Lock
  nameWithType: ModbusServer.Lock
- uid: FluentModbus.ModbusServer.MaxCoilAddress
  name: MaxCoilAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxCoilAddress
  commentId: P:FluentModbus.ModbusServer.MaxCoilAddress
  fullName: FluentModbus.ModbusServer.MaxCoilAddress
  nameWithType: ModbusServer.MaxCoilAddress
- uid: FluentModbus.ModbusServer.MaxCoilAddress*
  name: MaxCoilAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxCoilAddress_
  commentId: Overload:FluentModbus.ModbusServer.MaxCoilAddress
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.MaxCoilAddress
  nameWithType: ModbusServer.MaxCoilAddress
- uid: FluentModbus.ModbusServer.MaxDiscreteInputAddress
  name: MaxDiscreteInputAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxDiscreteInputAddress
  commentId: P:FluentModbus.ModbusServer.MaxDiscreteInputAddress
  fullName: FluentModbus.ModbusServer.MaxDiscreteInputAddress
  nameWithType: ModbusServer.MaxDiscreteInputAddress
- uid: FluentModbus.ModbusServer.MaxDiscreteInputAddress*
  name: MaxDiscreteInputAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxDiscreteInputAddress_
  commentId: Overload:FluentModbus.ModbusServer.MaxDiscreteInputAddress
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.MaxDiscreteInputAddress
  nameWithType: ModbusServer.MaxDiscreteInputAddress
- uid: FluentModbus.ModbusServer.MaxHoldingRegisterAddress
  name: MaxHoldingRegisterAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxHoldingRegisterAddress
  commentId: P:FluentModbus.ModbusServer.MaxHoldingRegisterAddress
  fullName: FluentModbus.ModbusServer.MaxHoldingRegisterAddress
  nameWithType: ModbusServer.MaxHoldingRegisterAddress
- uid: FluentModbus.ModbusServer.MaxHoldingRegisterAddress*
  name: MaxHoldingRegisterAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxHoldingRegisterAddress_
  commentId: Overload:FluentModbus.ModbusServer.MaxHoldingRegisterAddress
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.MaxHoldingRegisterAddress
  nameWithType: ModbusServer.MaxHoldingRegisterAddress
- uid: FluentModbus.ModbusServer.MaxInputRegisterAddress
  name: MaxInputRegisterAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxInputRegisterAddress
  commentId: P:FluentModbus.ModbusServer.MaxInputRegisterAddress
  fullName: FluentModbus.ModbusServer.MaxInputRegisterAddress
  nameWithType: ModbusServer.MaxInputRegisterAddress
- uid: FluentModbus.ModbusServer.MaxInputRegisterAddress*
  name: MaxInputRegisterAddress
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_MaxInputRegisterAddress_
  commentId: Overload:FluentModbus.ModbusServer.MaxInputRegisterAddress
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.MaxInputRegisterAddress
  nameWithType: ModbusServer.MaxInputRegisterAddress
- uid: FluentModbus.ModbusServer.ProcessRequests
  name: ProcessRequests()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_ProcessRequests
  commentId: M:FluentModbus.ModbusServer.ProcessRequests
  fullName: FluentModbus.ModbusServer.ProcessRequests()
  nameWithType: ModbusServer.ProcessRequests()
- uid: FluentModbus.ModbusServer.ProcessRequests*
  name: ProcessRequests
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_ProcessRequests_
  commentId: Overload:FluentModbus.ModbusServer.ProcessRequests
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.ProcessRequests
  nameWithType: ModbusServer.ProcessRequests
- uid: FluentModbus.ModbusServer.RegistersChanged
  name: RegistersChanged
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_RegistersChanged
  commentId: E:FluentModbus.ModbusServer.RegistersChanged
  fullName: FluentModbus.ModbusServer.RegistersChanged
  nameWithType: ModbusServer.RegistersChanged
- uid: FluentModbus.ModbusServer.RemoveUnit(System.Byte)
  name: RemoveUnit(byte)
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_RemoveUnit_System_Byte_
  commentId: M:FluentModbus.ModbusServer.RemoveUnit(System.Byte)
  name.vb: RemoveUnit(Byte)
  fullName: FluentModbus.ModbusServer.RemoveUnit(byte)
  fullName.vb: FluentModbus.ModbusServer.RemoveUnit(Byte)
  nameWithType: ModbusServer.RemoveUnit(byte)
  nameWithType.vb: ModbusServer.RemoveUnit(Byte)
- uid: FluentModbus.ModbusServer.RemoveUnit*
  name: RemoveUnit
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_RemoveUnit_
  commentId: Overload:FluentModbus.ModbusServer.RemoveUnit
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.RemoveUnit
  nameWithType: ModbusServer.RemoveUnit
- uid: FluentModbus.ModbusServer.RequestValidator
  name: RequestValidator
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_RequestValidator
  commentId: P:FluentModbus.ModbusServer.RequestValidator
  fullName: FluentModbus.ModbusServer.RequestValidator
  nameWithType: ModbusServer.RequestValidator
- uid: FluentModbus.ModbusServer.RequestValidator*
  name: RequestValidator
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_RequestValidator_
  commentId: Overload:FluentModbus.ModbusServer.RequestValidator
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.RequestValidator
  nameWithType: ModbusServer.RequestValidator
- uid: FluentModbus.ModbusServer.StartProcessing
  name: StartProcessing()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_StartProcessing
  commentId: M:FluentModbus.ModbusServer.StartProcessing
  fullName: FluentModbus.ModbusServer.StartProcessing()
  nameWithType: ModbusServer.StartProcessing()
- uid: FluentModbus.ModbusServer.StartProcessing*
  name: StartProcessing
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_StartProcessing_
  commentId: Overload:FluentModbus.ModbusServer.StartProcessing
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.StartProcessing
  nameWithType: ModbusServer.StartProcessing
- uid: FluentModbus.ModbusServer.Stop
  name: Stop()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Stop
  commentId: M:FluentModbus.ModbusServer.Stop
  fullName: FluentModbus.ModbusServer.Stop()
  nameWithType: ModbusServer.Stop()
- uid: FluentModbus.ModbusServer.Stop*
  name: Stop
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Stop_
  commentId: Overload:FluentModbus.ModbusServer.Stop
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.Stop
  nameWithType: ModbusServer.Stop
- uid: FluentModbus.ModbusServer.StopProcessing
  name: StopProcessing()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_StopProcessing
  commentId: M:FluentModbus.ModbusServer.StopProcessing
  fullName: FluentModbus.ModbusServer.StopProcessing()
  nameWithType: ModbusServer.StopProcessing()
- uid: FluentModbus.ModbusServer.StopProcessing*
  name: StopProcessing
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_StopProcessing_
  commentId: Overload:FluentModbus.ModbusServer.StopProcessing
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.StopProcessing
  nameWithType: ModbusServer.StopProcessing
- uid: FluentModbus.ModbusServer.UnitIdentifiers
  name: UnitIdentifiers
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_UnitIdentifiers
  commentId: P:FluentModbus.ModbusServer.UnitIdentifiers
  fullName: FluentModbus.ModbusServer.UnitIdentifiers
  nameWithType: ModbusServer.UnitIdentifiers
- uid: FluentModbus.ModbusServer.UnitIdentifiers*
  name: UnitIdentifiers
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_UnitIdentifiers_
  commentId: Overload:FluentModbus.ModbusServer.UnitIdentifiers
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.UnitIdentifiers
  nameWithType: ModbusServer.UnitIdentifiers
- uid: FluentModbus.ModbusServer.Update
  name: Update()
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Update
  commentId: M:FluentModbus.ModbusServer.Update
  fullName: FluentModbus.ModbusServer.Update()
  nameWithType: ModbusServer.Update()
- uid: FluentModbus.ModbusServer.Update*
  name: Update
  href: api/FluentModbus.ModbusServer.html#FluentModbus_ModbusServer_Update_
  commentId: Overload:FluentModbus.ModbusServer.Update
  isSpec: "True"
  fullName: FluentModbus.ModbusServer.Update
  nameWithType: ModbusServer.Update
- uid: FluentModbus.ModbusTcpClient
  name: ModbusTcpClient
  href: api/FluentModbus.ModbusTcpClient.html
  commentId: T:FluentModbus.ModbusTcpClient
  fullName: FluentModbus.ModbusTcpClient
  nameWithType: ModbusTcpClient
- uid: FluentModbus.ModbusTcpClient.#ctor
  name: ModbusTcpClient()
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient__ctor
  commentId: M:FluentModbus.ModbusTcpClient.#ctor
  name.vb: New()
  fullName: FluentModbus.ModbusTcpClient.ModbusTcpClient()
  fullName.vb: FluentModbus.ModbusTcpClient.New()
  nameWithType: ModbusTcpClient.ModbusTcpClient()
  nameWithType.vb: ModbusTcpClient.New()
- uid: FluentModbus.ModbusTcpClient.#ctor*
  name: ModbusTcpClient
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient__ctor_
  commentId: Overload:FluentModbus.ModbusTcpClient.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ModbusTcpClient.ModbusTcpClient
  fullName.vb: FluentModbus.ModbusTcpClient.New
  nameWithType: ModbusTcpClient.ModbusTcpClient
  nameWithType.vb: ModbusTcpClient.New
- uid: FluentModbus.ModbusTcpClient.Connect
  name: Connect()
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect
  commentId: M:FluentModbus.ModbusTcpClient.Connect
  fullName: FluentModbus.ModbusTcpClient.Connect()
  nameWithType: ModbusTcpClient.Connect()
- uid: FluentModbus.ModbusTcpClient.Connect(FluentModbus.ModbusEndianness)
  name: Connect(ModbusEndianness)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(FluentModbus.ModbusEndianness)
  fullName: FluentModbus.ModbusTcpClient.Connect(FluentModbus.ModbusEndianness)
  nameWithType: ModbusTcpClient.Connect(ModbusEndianness)
- uid: FluentModbus.ModbusTcpClient.Connect(System.Net.IPAddress)
  name: Connect(IPAddress)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_System_Net_IPAddress_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(System.Net.IPAddress)
  fullName: FluentModbus.ModbusTcpClient.Connect(System.Net.IPAddress)
  nameWithType: ModbusTcpClient.Connect(IPAddress)
- uid: FluentModbus.ModbusTcpClient.Connect(System.Net.IPAddress,FluentModbus.ModbusEndianness)
  name: Connect(IPAddress, ModbusEndianness)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_System_Net_IPAddress_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(System.Net.IPAddress,FluentModbus.ModbusEndianness)
  fullName: FluentModbus.ModbusTcpClient.Connect(System.Net.IPAddress, FluentModbus.ModbusEndianness)
  nameWithType: ModbusTcpClient.Connect(IPAddress, ModbusEndianness)
- uid: FluentModbus.ModbusTcpClient.Connect(System.Net.IPEndPoint)
  name: Connect(IPEndPoint)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_System_Net_IPEndPoint_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(System.Net.IPEndPoint)
  fullName: FluentModbus.ModbusTcpClient.Connect(System.Net.IPEndPoint)
  nameWithType: ModbusTcpClient.Connect(IPEndPoint)
- uid: FluentModbus.ModbusTcpClient.Connect(System.Net.IPEndPoint,FluentModbus.ModbusEndianness)
  name: Connect(IPEndPoint, ModbusEndianness)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_System_Net_IPEndPoint_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(System.Net.IPEndPoint,FluentModbus.ModbusEndianness)
  fullName: FluentModbus.ModbusTcpClient.Connect(System.Net.IPEndPoint, FluentModbus.ModbusEndianness)
  nameWithType: ModbusTcpClient.Connect(IPEndPoint, ModbusEndianness)
- uid: FluentModbus.ModbusTcpClient.Connect(System.String)
  name: Connect(string)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_System_String_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(System.String)
  name.vb: Connect(String)
  fullName: FluentModbus.ModbusTcpClient.Connect(string)
  fullName.vb: FluentModbus.ModbusTcpClient.Connect(String)
  nameWithType: ModbusTcpClient.Connect(string)
  nameWithType.vb: ModbusTcpClient.Connect(String)
- uid: FluentModbus.ModbusTcpClient.Connect(System.String,FluentModbus.ModbusEndianness)
  name: Connect(string, ModbusEndianness)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_System_String_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusTcpClient.Connect(System.String,FluentModbus.ModbusEndianness)
  name.vb: Connect(String, ModbusEndianness)
  fullName: FluentModbus.ModbusTcpClient.Connect(string, FluentModbus.ModbusEndianness)
  fullName.vb: FluentModbus.ModbusTcpClient.Connect(String, FluentModbus.ModbusEndianness)
  nameWithType: ModbusTcpClient.Connect(string, ModbusEndianness)
  nameWithType.vb: ModbusTcpClient.Connect(String, ModbusEndianness)
- uid: FluentModbus.ModbusTcpClient.Connect*
  name: Connect
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Connect_
  commentId: Overload:FluentModbus.ModbusTcpClient.Connect
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.Connect
  nameWithType: ModbusTcpClient.Connect
- uid: FluentModbus.ModbusTcpClient.ConnectTimeout
  name: ConnectTimeout
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_ConnectTimeout
  commentId: P:FluentModbus.ModbusTcpClient.ConnectTimeout
  fullName: FluentModbus.ModbusTcpClient.ConnectTimeout
  nameWithType: ModbusTcpClient.ConnectTimeout
- uid: FluentModbus.ModbusTcpClient.ConnectTimeout*
  name: ConnectTimeout
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_ConnectTimeout_
  commentId: Overload:FluentModbus.ModbusTcpClient.ConnectTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.ConnectTimeout
  nameWithType: ModbusTcpClient.ConnectTimeout
- uid: FluentModbus.ModbusTcpClient.Disconnect
  name: Disconnect()
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Disconnect
  commentId: M:FluentModbus.ModbusTcpClient.Disconnect
  fullName: FluentModbus.ModbusTcpClient.Disconnect()
  nameWithType: ModbusTcpClient.Disconnect()
- uid: FluentModbus.ModbusTcpClient.Disconnect*
  name: Disconnect
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Disconnect_
  commentId: Overload:FluentModbus.ModbusTcpClient.Disconnect
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.Disconnect
  nameWithType: ModbusTcpClient.Disconnect
- uid: FluentModbus.ModbusTcpClient.Dispose
  name: Dispose()
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Dispose
  commentId: M:FluentModbus.ModbusTcpClient.Dispose
  fullName: FluentModbus.ModbusTcpClient.Dispose()
  nameWithType: ModbusTcpClient.Dispose()
- uid: FluentModbus.ModbusTcpClient.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Dispose_System_Boolean_
  commentId: M:FluentModbus.ModbusTcpClient.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: FluentModbus.ModbusTcpClient.Dispose(bool)
  fullName.vb: FluentModbus.ModbusTcpClient.Dispose(Boolean)
  nameWithType: ModbusTcpClient.Dispose(bool)
  nameWithType.vb: ModbusTcpClient.Dispose(Boolean)
- uid: FluentModbus.ModbusTcpClient.Dispose*
  name: Dispose
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Dispose_
  commentId: Overload:FluentModbus.ModbusTcpClient.Dispose
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.Dispose
  nameWithType: ModbusTcpClient.Dispose
- uid: FluentModbus.ModbusTcpClient.Initialize(System.Net.Sockets.TcpClient,FluentModbus.ModbusEndianness)
  name: Initialize(TcpClient, ModbusEndianness)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Initialize_System_Net_Sockets_TcpClient_FluentModbus_ModbusEndianness_
  commentId: M:FluentModbus.ModbusTcpClient.Initialize(System.Net.Sockets.TcpClient,FluentModbus.ModbusEndianness)
  fullName: FluentModbus.ModbusTcpClient.Initialize(System.Net.Sockets.TcpClient, FluentModbus.ModbusEndianness)
  nameWithType: ModbusTcpClient.Initialize(TcpClient, ModbusEndianness)
- uid: FluentModbus.ModbusTcpClient.Initialize*
  name: Initialize
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_Initialize_
  commentId: Overload:FluentModbus.ModbusTcpClient.Initialize
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.Initialize
  nameWithType: ModbusTcpClient.Initialize
- uid: FluentModbus.ModbusTcpClient.IsConnected
  name: IsConnected
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_IsConnected
  commentId: P:FluentModbus.ModbusTcpClient.IsConnected
  fullName: FluentModbus.ModbusTcpClient.IsConnected
  nameWithType: ModbusTcpClient.IsConnected
- uid: FluentModbus.ModbusTcpClient.IsConnected*
  name: IsConnected
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_IsConnected_
  commentId: Overload:FluentModbus.ModbusTcpClient.IsConnected
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.IsConnected
  nameWithType: ModbusTcpClient.IsConnected
- uid: FluentModbus.ModbusTcpClient.ReadTimeout
  name: ReadTimeout
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_ReadTimeout
  commentId: P:FluentModbus.ModbusTcpClient.ReadTimeout
  fullName: FluentModbus.ModbusTcpClient.ReadTimeout
  nameWithType: ModbusTcpClient.ReadTimeout
- uid: FluentModbus.ModbusTcpClient.ReadTimeout*
  name: ReadTimeout
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_ReadTimeout_
  commentId: Overload:FluentModbus.ModbusTcpClient.ReadTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.ReadTimeout
  nameWithType: ModbusTcpClient.ReadTimeout
- uid: FluentModbus.ModbusTcpClient.TransceiveFrame(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter})
  name: TransceiveFrame(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_TransceiveFrame_System_Byte_FluentModbus_ModbusFunctionCode_System_Action_FluentModbus_ExtendedBinaryWriter__
  commentId: M:FluentModbus.ModbusTcpClient.TransceiveFrame(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter})
  name.vb: TransceiveFrame(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter))
  fullName: FluentModbus.ModbusTcpClient.TransceiveFrame(byte, FluentModbus.ModbusFunctionCode, System.Action<FluentModbus.ExtendedBinaryWriter>)
  fullName.vb: FluentModbus.ModbusTcpClient.TransceiveFrame(Byte, FluentModbus.ModbusFunctionCode, System.Action(Of FluentModbus.ExtendedBinaryWriter))
  nameWithType: ModbusTcpClient.TransceiveFrame(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>)
  nameWithType.vb: ModbusTcpClient.TransceiveFrame(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter))
- uid: FluentModbus.ModbusTcpClient.TransceiveFrame*
  name: TransceiveFrame
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_TransceiveFrame_
  commentId: Overload:FluentModbus.ModbusTcpClient.TransceiveFrame
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.TransceiveFrame
  nameWithType: ModbusTcpClient.TransceiveFrame
- uid: FluentModbus.ModbusTcpClient.TransceiveFrameAsync(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter},System.Threading.CancellationToken)
  name: TransceiveFrameAsync(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>, CancellationToken)
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_TransceiveFrameAsync_System_Byte_FluentModbus_ModbusFunctionCode_System_Action_FluentModbus_ExtendedBinaryWriter__System_Threading_CancellationToken_
  commentId: M:FluentModbus.ModbusTcpClient.TransceiveFrameAsync(System.Byte,FluentModbus.ModbusFunctionCode,System.Action{FluentModbus.ExtendedBinaryWriter},System.Threading.CancellationToken)
  name.vb: TransceiveFrameAsync(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter), CancellationToken)
  fullName: FluentModbus.ModbusTcpClient.TransceiveFrameAsync(byte, FluentModbus.ModbusFunctionCode, System.Action<FluentModbus.ExtendedBinaryWriter>, System.Threading.CancellationToken)
  fullName.vb: FluentModbus.ModbusTcpClient.TransceiveFrameAsync(Byte, FluentModbus.ModbusFunctionCode, System.Action(Of FluentModbus.ExtendedBinaryWriter), System.Threading.CancellationToken)
  nameWithType: ModbusTcpClient.TransceiveFrameAsync(byte, ModbusFunctionCode, Action<ExtendedBinaryWriter>, CancellationToken)
  nameWithType.vb: ModbusTcpClient.TransceiveFrameAsync(Byte, ModbusFunctionCode, Action(Of ExtendedBinaryWriter), CancellationToken)
- uid: FluentModbus.ModbusTcpClient.TransceiveFrameAsync*
  name: TransceiveFrameAsync
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_TransceiveFrameAsync_
  commentId: Overload:FluentModbus.ModbusTcpClient.TransceiveFrameAsync
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.TransceiveFrameAsync
  nameWithType: ModbusTcpClient.TransceiveFrameAsync
- uid: FluentModbus.ModbusTcpClient.WriteTimeout
  name: WriteTimeout
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_WriteTimeout
  commentId: P:FluentModbus.ModbusTcpClient.WriteTimeout
  fullName: FluentModbus.ModbusTcpClient.WriteTimeout
  nameWithType: ModbusTcpClient.WriteTimeout
- uid: FluentModbus.ModbusTcpClient.WriteTimeout*
  name: WriteTimeout
  href: api/FluentModbus.ModbusTcpClient.html#FluentModbus_ModbusTcpClient_WriteTimeout_
  commentId: Overload:FluentModbus.ModbusTcpClient.WriteTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpClient.WriteTimeout
  nameWithType: ModbusTcpClient.WriteTimeout
- uid: FluentModbus.ModbusTcpServer
  name: ModbusTcpServer
  href: api/FluentModbus.ModbusTcpServer.html
  commentId: T:FluentModbus.ModbusTcpServer
  fullName: FluentModbus.ModbusTcpServer
  nameWithType: ModbusTcpServer
- uid: FluentModbus.ModbusTcpServer.#ctor
  name: ModbusTcpServer()
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer__ctor
  commentId: M:FluentModbus.ModbusTcpServer.#ctor
  name.vb: New()
  fullName: FluentModbus.ModbusTcpServer.ModbusTcpServer()
  fullName.vb: FluentModbus.ModbusTcpServer.New()
  nameWithType: ModbusTcpServer.ModbusTcpServer()
  nameWithType.vb: ModbusTcpServer.New()
- uid: FluentModbus.ModbusTcpServer.#ctor(Microsoft.Extensions.Logging.ILogger)
  name: ModbusTcpServer(ILogger)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer__ctor_Microsoft_Extensions_Logging_ILogger_
  commentId: M:FluentModbus.ModbusTcpServer.#ctor(Microsoft.Extensions.Logging.ILogger)
  name.vb: New(ILogger)
  fullName: FluentModbus.ModbusTcpServer.ModbusTcpServer(Microsoft.Extensions.Logging.ILogger)
  fullName.vb: FluentModbus.ModbusTcpServer.New(Microsoft.Extensions.Logging.ILogger)
  nameWithType: ModbusTcpServer.ModbusTcpServer(ILogger)
  nameWithType.vb: ModbusTcpServer.New(ILogger)
- uid: FluentModbus.ModbusTcpServer.#ctor(Microsoft.Extensions.Logging.ILogger,System.Boolean)
  name: ModbusTcpServer(ILogger, bool)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer__ctor_Microsoft_Extensions_Logging_ILogger_System_Boolean_
  commentId: M:FluentModbus.ModbusTcpServer.#ctor(Microsoft.Extensions.Logging.ILogger,System.Boolean)
  name.vb: New(ILogger, Boolean)
  fullName: FluentModbus.ModbusTcpServer.ModbusTcpServer(Microsoft.Extensions.Logging.ILogger, bool)
  fullName.vb: FluentModbus.ModbusTcpServer.New(Microsoft.Extensions.Logging.ILogger, Boolean)
  nameWithType: ModbusTcpServer.ModbusTcpServer(ILogger, bool)
  nameWithType.vb: ModbusTcpServer.New(ILogger, Boolean)
- uid: FluentModbus.ModbusTcpServer.#ctor(System.Boolean)
  name: ModbusTcpServer(bool)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer__ctor_System_Boolean_
  commentId: M:FluentModbus.ModbusTcpServer.#ctor(System.Boolean)
  name.vb: New(Boolean)
  fullName: FluentModbus.ModbusTcpServer.ModbusTcpServer(bool)
  fullName.vb: FluentModbus.ModbusTcpServer.New(Boolean)
  nameWithType: ModbusTcpServer.ModbusTcpServer(bool)
  nameWithType.vb: ModbusTcpServer.New(Boolean)
- uid: FluentModbus.ModbusTcpServer.#ctor*
  name: ModbusTcpServer
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer__ctor_
  commentId: Overload:FluentModbus.ModbusTcpServer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: FluentModbus.ModbusTcpServer.ModbusTcpServer
  fullName.vb: FluentModbus.ModbusTcpServer.New
  nameWithType: ModbusTcpServer.ModbusTcpServer
  nameWithType.vb: ModbusTcpServer.New
- uid: FluentModbus.ModbusTcpServer.ConnectionCount
  name: ConnectionCount
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_ConnectionCount
  commentId: P:FluentModbus.ModbusTcpServer.ConnectionCount
  fullName: FluentModbus.ModbusTcpServer.ConnectionCount
  nameWithType: ModbusTcpServer.ConnectionCount
- uid: FluentModbus.ModbusTcpServer.ConnectionCount*
  name: ConnectionCount
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_ConnectionCount_
  commentId: Overload:FluentModbus.ModbusTcpServer.ConnectionCount
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpServer.ConnectionCount
  nameWithType: ModbusTcpServer.ConnectionCount
- uid: FluentModbus.ModbusTcpServer.ConnectionTimeout
  name: ConnectionTimeout
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_ConnectionTimeout
  commentId: P:FluentModbus.ModbusTcpServer.ConnectionTimeout
  fullName: FluentModbus.ModbusTcpServer.ConnectionTimeout
  nameWithType: ModbusTcpServer.ConnectionTimeout
- uid: FluentModbus.ModbusTcpServer.ConnectionTimeout*
  name: ConnectionTimeout
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_ConnectionTimeout_
  commentId: Overload:FluentModbus.ModbusTcpServer.ConnectionTimeout
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpServer.ConnectionTimeout
  nameWithType: ModbusTcpServer.ConnectionTimeout
- uid: FluentModbus.ModbusTcpServer.MaxConnections
  name: MaxConnections
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_MaxConnections
  commentId: P:FluentModbus.ModbusTcpServer.MaxConnections
  fullName: FluentModbus.ModbusTcpServer.MaxConnections
  nameWithType: ModbusTcpServer.MaxConnections
- uid: FluentModbus.ModbusTcpServer.MaxConnections*
  name: MaxConnections
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_MaxConnections_
  commentId: Overload:FluentModbus.ModbusTcpServer.MaxConnections
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpServer.MaxConnections
  nameWithType: ModbusTcpServer.MaxConnections
- uid: FluentModbus.ModbusTcpServer.ProcessRequests
  name: ProcessRequests()
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_ProcessRequests
  commentId: M:FluentModbus.ModbusTcpServer.ProcessRequests
  fullName: FluentModbus.ModbusTcpServer.ProcessRequests()
  nameWithType: ModbusTcpServer.ProcessRequests()
- uid: FluentModbus.ModbusTcpServer.ProcessRequests*
  name: ProcessRequests
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_ProcessRequests_
  commentId: Overload:FluentModbus.ModbusTcpServer.ProcessRequests
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpServer.ProcessRequests
  nameWithType: ModbusTcpServer.ProcessRequests
- uid: FluentModbus.ModbusTcpServer.Start
  name: Start()
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Start
  commentId: M:FluentModbus.ModbusTcpServer.Start
  fullName: FluentModbus.ModbusTcpServer.Start()
  nameWithType: ModbusTcpServer.Start()
- uid: FluentModbus.ModbusTcpServer.Start(FluentModbus.ITcpClientProvider,System.Boolean)
  name: Start(ITcpClientProvider, bool)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Start_FluentModbus_ITcpClientProvider_System_Boolean_
  commentId: M:FluentModbus.ModbusTcpServer.Start(FluentModbus.ITcpClientProvider,System.Boolean)
  name.vb: Start(ITcpClientProvider, Boolean)
  fullName: FluentModbus.ModbusTcpServer.Start(FluentModbus.ITcpClientProvider, bool)
  fullName.vb: FluentModbus.ModbusTcpServer.Start(FluentModbus.ITcpClientProvider, Boolean)
  nameWithType: ModbusTcpServer.Start(ITcpClientProvider, bool)
  nameWithType.vb: ModbusTcpServer.Start(ITcpClientProvider, Boolean)
- uid: FluentModbus.ModbusTcpServer.Start(System.Net.IPAddress)
  name: Start(IPAddress)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Start_System_Net_IPAddress_
  commentId: M:FluentModbus.ModbusTcpServer.Start(System.Net.IPAddress)
  fullName: FluentModbus.ModbusTcpServer.Start(System.Net.IPAddress)
  nameWithType: ModbusTcpServer.Start(IPAddress)
- uid: FluentModbus.ModbusTcpServer.Start(System.Net.IPEndPoint)
  name: Start(IPEndPoint)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Start_System_Net_IPEndPoint_
  commentId: M:FluentModbus.ModbusTcpServer.Start(System.Net.IPEndPoint)
  fullName: FluentModbus.ModbusTcpServer.Start(System.Net.IPEndPoint)
  nameWithType: ModbusTcpServer.Start(IPEndPoint)
- uid: FluentModbus.ModbusTcpServer.Start(System.Net.Sockets.TcpClient)
  name: Start(TcpClient)
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Start_System_Net_Sockets_TcpClient_
  commentId: M:FluentModbus.ModbusTcpServer.Start(System.Net.Sockets.TcpClient)
  fullName: FluentModbus.ModbusTcpServer.Start(System.Net.Sockets.TcpClient)
  nameWithType: ModbusTcpServer.Start(TcpClient)
- uid: FluentModbus.ModbusTcpServer.Start*
  name: Start
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Start_
  commentId: Overload:FluentModbus.ModbusTcpServer.Start
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpServer.Start
  nameWithType: ModbusTcpServer.Start
- uid: FluentModbus.ModbusTcpServer.Stop
  name: Stop()
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Stop
  commentId: M:FluentModbus.ModbusTcpServer.Stop
  fullName: FluentModbus.ModbusTcpServer.Stop()
  nameWithType: ModbusTcpServer.Stop()
- uid: FluentModbus.ModbusTcpServer.Stop*
  name: Stop
  href: api/FluentModbus.ModbusTcpServer.html#FluentModbus_ModbusTcpServer_Stop_
  commentId: Overload:FluentModbus.ModbusTcpServer.Stop
  isSpec: "True"
  fullName: FluentModbus.ModbusTcpServer.Stop
  nameWithType: ModbusTcpServer.Stop
- uid: FluentModbus.RegistersChangedEventArgs
  name: RegistersChangedEventArgs
  href: api/FluentModbus.RegistersChangedEventArgs.html
  commentId: T:FluentModbus.RegistersChangedEventArgs
  fullName: FluentModbus.RegistersChangedEventArgs
  nameWithType: RegistersChangedEventArgs
- uid: FluentModbus.RegistersChangedEventArgs.Registers
  name: Registers
  href: api/FluentModbus.RegistersChangedEventArgs.html#FluentModbus_RegistersChangedEventArgs_Registers
  commentId: P:FluentModbus.RegistersChangedEventArgs.Registers
  fullName: FluentModbus.RegistersChangedEventArgs.Registers
  nameWithType: RegistersChangedEventArgs.Registers
- uid: FluentModbus.RegistersChangedEventArgs.Registers*
  name: Registers
  href: api/FluentModbus.RegistersChangedEventArgs.html#FluentModbus_RegistersChangedEventArgs_Registers_
  commentId: Overload:FluentModbus.RegistersChangedEventArgs.Registers
  isSpec: "True"
  fullName: FluentModbus.RegistersChangedEventArgs.Registers
  nameWithType: RegistersChangedEventArgs.Registers
- uid: FluentModbus.RegistersChangedEventArgs.UnitIdentifier
  name: UnitIdentifier
  href: api/FluentModbus.RegistersChangedEventArgs.html#FluentModbus_RegistersChangedEventArgs_UnitIdentifier
  commentId: P:FluentModbus.RegistersChangedEventArgs.UnitIdentifier
  fullName: FluentModbus.RegistersChangedEventArgs.UnitIdentifier
  nameWithType: RegistersChangedEventArgs.UnitIdentifier
- uid: FluentModbus.RegistersChangedEventArgs.UnitIdentifier*
  name: UnitIdentifier
  href: api/FluentModbus.RegistersChangedEventArgs.html#FluentModbus_RegistersChangedEventArgs_UnitIdentifier_
  commentId: Overload:FluentModbus.RegistersChangedEventArgs.UnitIdentifier
  isSpec: "True"
  fullName: FluentModbus.RegistersChangedEventArgs.UnitIdentifier
  nameWithType: RegistersChangedEventArgs.UnitIdentifier
- uid: FluentModbus.SpanExtensions
  name: SpanExtensions
  href: api/FluentModbus.SpanExtensions.html
  commentId: T:FluentModbus.SpanExtensions
  fullName: FluentModbus.SpanExtensions
  nameWithType: SpanExtensions
- uid: FluentModbus.SpanExtensions.Cast*
  name: Cast
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Cast_
  commentId: Overload:FluentModbus.SpanExtensions.Cast
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.Cast
  nameWithType: SpanExtensions.Cast
- uid: FluentModbus.SpanExtensions.Cast``2(System.Memory{``0})
  name: Cast<TFrom, TTo>(Memory<TFrom>)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Cast__2_System_Memory___0__
  commentId: M:FluentModbus.SpanExtensions.Cast``2(System.Memory{``0})
  name.vb: Cast(Of TFrom, TTo)(Memory(Of TFrom))
  fullName: FluentModbus.SpanExtensions.Cast<TFrom, TTo>(System.Memory<TFrom>)
  fullName.vb: FluentModbus.SpanExtensions.Cast(Of TFrom, TTo)(System.Memory(Of TFrom))
  nameWithType: SpanExtensions.Cast<TFrom, TTo>(Memory<TFrom>)
  nameWithType.vb: SpanExtensions.Cast(Of TFrom, TTo)(Memory(Of TFrom))
- uid: FluentModbus.SpanExtensions.Get(System.Span{System.Byte},System.Int32)
  name: Get(Span<byte>, int)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Get_System_Span_System_Byte__System_Int32_
  commentId: M:FluentModbus.SpanExtensions.Get(System.Span{System.Byte},System.Int32)
  name.vb: Get(Span(Of Byte), Integer)
  fullName: FluentModbus.SpanExtensions.Get(System.Span<byte>, int)
  fullName.vb: FluentModbus.SpanExtensions.Get(System.Span(Of Byte), Integer)
  nameWithType: SpanExtensions.Get(Span<byte>, int)
  nameWithType.vb: SpanExtensions.Get(Span(Of Byte), Integer)
- uid: FluentModbus.SpanExtensions.Get*
  name: Get
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Get_
  commentId: Overload:FluentModbus.SpanExtensions.Get
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.Get
  nameWithType: SpanExtensions.Get
- uid: FluentModbus.SpanExtensions.GetBigEndian*
  name: GetBigEndian
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_GetBigEndian_
  commentId: Overload:FluentModbus.SpanExtensions.GetBigEndian
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.GetBigEndian
  nameWithType: SpanExtensions.GetBigEndian
- uid: FluentModbus.SpanExtensions.GetBigEndian``1(System.Span{System.Int16},System.Int32)
  name: GetBigEndian<T>(Span<short>, int)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_GetBigEndian__1_System_Span_System_Int16__System_Int32_
  commentId: M:FluentModbus.SpanExtensions.GetBigEndian``1(System.Span{System.Int16},System.Int32)
  name.vb: GetBigEndian(Of T)(Span(Of Short), Integer)
  fullName: FluentModbus.SpanExtensions.GetBigEndian<T>(System.Span<short>, int)
  fullName.vb: FluentModbus.SpanExtensions.GetBigEndian(Of T)(System.Span(Of Short), Integer)
  nameWithType: SpanExtensions.GetBigEndian<T>(Span<short>, int)
  nameWithType.vb: SpanExtensions.GetBigEndian(Of T)(Span(Of Short), Integer)
- uid: FluentModbus.SpanExtensions.GetLittleEndian*
  name: GetLittleEndian
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_GetLittleEndian_
  commentId: Overload:FluentModbus.SpanExtensions.GetLittleEndian
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.GetLittleEndian
  nameWithType: SpanExtensions.GetLittleEndian
- uid: FluentModbus.SpanExtensions.GetLittleEndian``1(System.Span{System.Int16},System.Int32)
  name: GetLittleEndian<T>(Span<short>, int)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_GetLittleEndian__1_System_Span_System_Int16__System_Int32_
  commentId: M:FluentModbus.SpanExtensions.GetLittleEndian``1(System.Span{System.Int16},System.Int32)
  name.vb: GetLittleEndian(Of T)(Span(Of Short), Integer)
  fullName: FluentModbus.SpanExtensions.GetLittleEndian<T>(System.Span<short>, int)
  fullName.vb: FluentModbus.SpanExtensions.GetLittleEndian(Of T)(System.Span(Of Short), Integer)
  nameWithType: SpanExtensions.GetLittleEndian<T>(Span<short>, int)
  nameWithType.vb: SpanExtensions.GetLittleEndian(Of T)(Span(Of Short), Integer)
- uid: FluentModbus.SpanExtensions.GetMidLittleEndian*
  name: GetMidLittleEndian
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_GetMidLittleEndian_
  commentId: Overload:FluentModbus.SpanExtensions.GetMidLittleEndian
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.GetMidLittleEndian
  nameWithType: SpanExtensions.GetMidLittleEndian
- uid: FluentModbus.SpanExtensions.GetMidLittleEndian``1(System.Span{System.Int16},System.Int32)
  name: GetMidLittleEndian<T>(Span<short>, int)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_GetMidLittleEndian__1_System_Span_System_Int16__System_Int32_
  commentId: M:FluentModbus.SpanExtensions.GetMidLittleEndian``1(System.Span{System.Int16},System.Int32)
  name.vb: GetMidLittleEndian(Of T)(Span(Of Short), Integer)
  fullName: FluentModbus.SpanExtensions.GetMidLittleEndian<T>(System.Span<short>, int)
  fullName.vb: FluentModbus.SpanExtensions.GetMidLittleEndian(Of T)(System.Span(Of Short), Integer)
  nameWithType: SpanExtensions.GetMidLittleEndian<T>(Span<short>, int)
  nameWithType.vb: SpanExtensions.GetMidLittleEndian(Of T)(Span(Of Short), Integer)
- uid: FluentModbus.SpanExtensions.Set(System.Span{System.Byte},System.Int32,System.Boolean)
  name: Set(Span<byte>, int, bool)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Set_System_Span_System_Byte__System_Int32_System_Boolean_
  commentId: M:FluentModbus.SpanExtensions.Set(System.Span{System.Byte},System.Int32,System.Boolean)
  name.vb: Set(Span(Of Byte), Integer, Boolean)
  fullName: FluentModbus.SpanExtensions.Set(System.Span<byte>, int, bool)
  fullName.vb: FluentModbus.SpanExtensions.Set(System.Span(Of Byte), Integer, Boolean)
  nameWithType: SpanExtensions.Set(Span<byte>, int, bool)
  nameWithType.vb: SpanExtensions.Set(Span(Of Byte), Integer, Boolean)
- uid: FluentModbus.SpanExtensions.Set*
  name: Set
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Set_
  commentId: Overload:FluentModbus.SpanExtensions.Set
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.Set
  nameWithType: SpanExtensions.Set
- uid: FluentModbus.SpanExtensions.SetBigEndian*
  name: SetBigEndian
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_SetBigEndian_
  commentId: Overload:FluentModbus.SpanExtensions.SetBigEndian
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.SetBigEndian
  nameWithType: SpanExtensions.SetBigEndian
- uid: FluentModbus.SpanExtensions.SetBigEndian``1(System.Span{System.Int16},System.Int32,``0)
  name: SetBigEndian<T>(Span<short>, int, T)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_SetBigEndian__1_System_Span_System_Int16__System_Int32___0_
  commentId: M:FluentModbus.SpanExtensions.SetBigEndian``1(System.Span{System.Int16},System.Int32,``0)
  name.vb: SetBigEndian(Of T)(Span(Of Short), Integer, T)
  fullName: FluentModbus.SpanExtensions.SetBigEndian<T>(System.Span<short>, int, T)
  fullName.vb: FluentModbus.SpanExtensions.SetBigEndian(Of T)(System.Span(Of Short), Integer, T)
  nameWithType: SpanExtensions.SetBigEndian<T>(Span<short>, int, T)
  nameWithType.vb: SpanExtensions.SetBigEndian(Of T)(Span(Of Short), Integer, T)
- uid: FluentModbus.SpanExtensions.SetLittleEndian*
  name: SetLittleEndian
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_SetLittleEndian_
  commentId: Overload:FluentModbus.SpanExtensions.SetLittleEndian
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.SetLittleEndian
  nameWithType: SpanExtensions.SetLittleEndian
- uid: FluentModbus.SpanExtensions.SetLittleEndian``1(System.Span{System.Int16},System.Int32,``0)
  name: SetLittleEndian<T>(Span<short>, int, T)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_SetLittleEndian__1_System_Span_System_Int16__System_Int32___0_
  commentId: M:FluentModbus.SpanExtensions.SetLittleEndian``1(System.Span{System.Int16},System.Int32,``0)
  name.vb: SetLittleEndian(Of T)(Span(Of Short), Integer, T)
  fullName: FluentModbus.SpanExtensions.SetLittleEndian<T>(System.Span<short>, int, T)
  fullName.vb: FluentModbus.SpanExtensions.SetLittleEndian(Of T)(System.Span(Of Short), Integer, T)
  nameWithType: SpanExtensions.SetLittleEndian<T>(Span<short>, int, T)
  nameWithType.vb: SpanExtensions.SetLittleEndian(Of T)(Span(Of Short), Integer, T)
- uid: FluentModbus.SpanExtensions.SetMidLittleEndian*
  name: SetMidLittleEndian
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_SetMidLittleEndian_
  commentId: Overload:FluentModbus.SpanExtensions.SetMidLittleEndian
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.SetMidLittleEndian
  nameWithType: SpanExtensions.SetMidLittleEndian
- uid: FluentModbus.SpanExtensions.SetMidLittleEndian``1(System.Span{System.Int16},System.Int32,``0)
  name: SetMidLittleEndian<T>(Span<short>, int, T)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_SetMidLittleEndian__1_System_Span_System_Int16__System_Int32___0_
  commentId: M:FluentModbus.SpanExtensions.SetMidLittleEndian``1(System.Span{System.Int16},System.Int32,``0)
  name.vb: SetMidLittleEndian(Of T)(Span(Of Short), Integer, T)
  fullName: FluentModbus.SpanExtensions.SetMidLittleEndian<T>(System.Span<short>, int, T)
  fullName.vb: FluentModbus.SpanExtensions.SetMidLittleEndian(Of T)(System.Span(Of Short), Integer, T)
  nameWithType: SpanExtensions.SetMidLittleEndian<T>(Span<short>, int, T)
  nameWithType.vb: SpanExtensions.SetMidLittleEndian(Of T)(Span(Of Short), Integer, T)
- uid: FluentModbus.SpanExtensions.Toggle(System.Span{System.Byte},System.Int32)
  name: Toggle(Span<byte>, int)
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Toggle_System_Span_System_Byte__System_Int32_
  commentId: M:FluentModbus.SpanExtensions.Toggle(System.Span{System.Byte},System.Int32)
  name.vb: Toggle(Span(Of Byte), Integer)
  fullName: FluentModbus.SpanExtensions.Toggle(System.Span<byte>, int)
  fullName.vb: FluentModbus.SpanExtensions.Toggle(System.Span(Of Byte), Integer)
  nameWithType: SpanExtensions.Toggle(Span<byte>, int)
  nameWithType.vb: SpanExtensions.Toggle(Span(Of Byte), Integer)
- uid: FluentModbus.SpanExtensions.Toggle*
  name: Toggle
  href: api/FluentModbus.SpanExtensions.html#FluentModbus_SpanExtensions_Toggle_
  commentId: Overload:FluentModbus.SpanExtensions.Toggle
  isSpec: "True"
  fullName: FluentModbus.SpanExtensions.Toggle
  nameWithType: SpanExtensions.Toggle
