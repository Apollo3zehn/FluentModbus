<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>

<# 
    var csstring = File.ReadAllText("src/FluentModbus/Client/ModbusRtuOverTcpClient.cs");
    var match = Regex.Matches(csstring, @"(protected override Span<byte> TransceiveFrame\()(.*?)\)(.*?\n        })", RegexOptions.Singleline)[0];

#>
 /* This is automatically translated code. */
 
namespace FluentModbus
{
    public partial class ModbusRtuOverTcpClient
    {
        <#
            // replace AsSpan
            var signature = match.Groups[2].Value;
            var body = match.Groups[3].Value;
            body = Regex.Replace(body, "AsSpan", "AsMemory");
            body = Regex.Replace(body, @"_networkStream.Write\((.*?)\)", m => $"await _networkStream.WriteAsync({m.Groups[1]}, cancellationToken).ConfigureAwait(false)");
            body = Regex.Replace(body, @"_networkStream.Read\((.*?)\)", m => $"await _networkStream.ReadAsync({m.Groups[1]}, cancellationToken).ConfigureAwait(false)");
            body = Regex.Replace(body, @"// ASYNC-ONLY: ", "");

            Write($"///<inheritdoc/>\n        protected override async Task<Memory<byte>> TransceiveFrameAsync({signature}, CancellationToken cancellationToken = default){body}");
        #>
    
    }
}